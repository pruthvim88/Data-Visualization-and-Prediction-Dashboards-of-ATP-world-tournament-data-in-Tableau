<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='Data by country (Worldbankdata)' inline='true' name='excel-direct.42012.939728854166' version='10.2'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='Data by country (Worldbankdata)' name='excel-direct.42012.939728854166leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' filename='E:/E drive/Study/UB/Sem 2/CSE 587 DIC/Tableau/Worldbankdata.xlsx' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.42012.939728854166leaf' name='&apos;Data by country$&apos;' table='[&apos;Data by country$&apos;]' type='table'>
          <columns header='yes'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='Stock: Listed domestic companies (count)' ordinal='2' />
            <column datatype='integer' name='Stock: Market cap companies (current US$)' ordinal='3' />
            <column datatype='integer' name='Stock: Traded, total value (current US$)' ordinal='4' />
            <column datatype='integer' name='Stock: Market cap of companies (% GDP)' ordinal='5' />
            <column datatype='integer' name='Stock: Traded, total value (% GDP)' ordinal='6' />
            <column datatype='integer' name='Stock: Traded, turnover ratio (%)' ordinal='7' />
            <column datatype='integer' name='Banks: Comm branches (per 100k adults)' ordinal='8' />
            <column datatype='integer' name='Banks: Automated tellers (per 100k adults)' ordinal='9' />
            <column datatype='integer' name='Finance: Consumer price index (2005 = 100)' ordinal='10' />
            <column datatype='integer' name='Finance: Deposit interest rate (%)' ordinal='11' />
            <column datatype='integer' name='Finance: Lending interest rate (%)' ordinal='12' />
            <column datatype='integer' name='Finance: Real interest rate (%)' ordinal='13' />
            <column datatype='integer' name='Business: Start-up proc cost (% GNI per capita)' ordinal='14' />
            <column datatype='integer' name='Business: Cost to export ($ per container)' ordinal='15' />
            <column datatype='integer' name='Business: Cost to import ($ per container)' ordinal='16' />
            <column datatype='integer' name='Business: Ease of biz index (1=easiest)' ordinal='17' />
            <column datatype='integer' name='Business: Start-up procedures (count)' ordinal='18' />
            <column datatype='integer' name='Business: Legal rights (0=weak, 10=strong)' ordinal='19' />
            <column datatype='integer' name='Business: Time to start a business (days)' ordinal='20' />
            <column datatype='integer' name='Business: Time to prep &amp; pay taxes (hours)' ordinal='21' />
            <column datatype='integer' name='Business: Total tax rate (% of commercial profits)' ordinal='22' />
            <column datatype='integer' name='Business: Firing cost (weeks of wages)' ordinal='23' />
            <column datatype='integer' name='R&amp;D: Scientific &amp; tech articles' ordinal='24' />
            <column datatype='integer' name='Transit: Air transport, passengers (count)' ordinal='25' />
            <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='26' />
            <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='27' />
            <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='28' />
            <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='29' />
            <column datatype='integer' name='Military: Armed forces personnel' ordinal='30' />
            <column datatype='real' name='Military: Expenditure (% GDP)' ordinal='31' />
            <column datatype='real' name='Military: Expenditure (% central govt exp)' ordinal='32' />
            <column datatype='integer' name='Business: Exports (% GDP)' ordinal='33' />
            <column datatype='integer' name='Business: Imports (% GDP)' ordinal='34' />
            <column datatype='integer' name='Business: Trade (% GDP)' ordinal='35' />
            <column datatype='integer' name='Business: Exports (current US$)' ordinal='36' />
            <column datatype='integer' name='Business: Imports (current US$)' ordinal='37' />
            <column datatype='integer' name='Finance: GDP (current US$)' ordinal='38' />
            <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='39' />
            <column datatype='integer' name='Finance: Net income from abroad (current LCU)' ordinal='40' />
            <column datatype='integer' name='Government: Seats women in nat parliament (%)' ordinal='41' />
            <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='42' />
            <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='43' />
            <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='44' />
            <column datatype='integer' name='Population: Total (count)' ordinal='45' />
            <column datatype='integer' name='Population: Urban (count)' ordinal='46' />
            <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='47' />
            <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='48' />
            <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='49' />
            <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='50' />
            <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='51' />
            <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='52' />
            <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='53' />
            <column datatype='integer' name='Business: International tourism inc (current US$)' ordinal='54' />
            <column datatype='integer' name='Business: International tourism, exp (current US$)' ordinal='55' />
            <column datatype='integer' name='Measures with values' ordinal='56' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Listed domestic companies (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Listed domestic companies (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Listed domestic companies (count)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap companies (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap companies (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap companies (current US$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (current US$)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap of companies (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap of companies (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap of companies (% GDP)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (% GDP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, turnover ratio (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, turnover ratio (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, turnover ratio (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Comm branches (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Comm branches (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Comm branches (per 100k adults)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Automated tellers (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Automated tellers (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Automated tellers (per 100k adults)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Consumer price index (2005 = 100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Consumer price index (2005 = 100)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Consumer price index (2005 = 100)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Deposit interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Deposit interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Deposit interest rate (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Lending interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Lending interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Lending interest rate (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Real interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Real interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Real interest rate (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up proc cost (% GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up proc cost (% GNI per capita)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up proc cost (% GNI per capita)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to export ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to export ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to export ($ per container)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to import ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to import ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to import ($ per container)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Ease of biz index (1=easiest)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Ease of biz index (1=easiest)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Ease of biz index (1=easiest)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up procedures (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up procedures (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up procedures (count)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Legal rights (0=weak, 10=strong)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Legal rights (0=weak, 10=strong)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Legal rights (0=weak, 10=strong)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to start a business (days)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to start a business (days)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to start a business (days)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to prep &amp; pay taxes (hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to prep &amp; pay taxes (hours)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to prep &amp; pay taxes (hours)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Total tax rate (% of commercial profits)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Total tax rate (% of commercial profits)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Total tax rate (% of commercial profits)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Firing cost (weeks of wages)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Firing cost (weeks of wages)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Firing cost (weeks of wages)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R&amp;D: Scientific &amp; tech articles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[R&amp;D: Scientific &amp; tech articles]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>R&amp;D: Scientific &amp; tech articles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Air transport, passengers (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Air transport, passengers (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Air transport, passengers (count)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Railways, (million passenger-km)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Railways, (million passenger-km)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Mobile phone subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Mobile phone subscribers]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Mobile phone subscribers</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Internet users (per 100 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Internet users (per 100 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Internet users (per 100 people)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Armed forces personnel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Military: Armed forces personnel]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Armed forces personnel</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% GDP)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% central govt exp)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% central govt exp)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% central govt exp)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (% GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (% GDP)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Trade (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Trade (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Trade (% GDP)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (current US$)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (current US$)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP (current US$)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Net income from abroad (current LCU)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Net income from abroad (current LCU)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Net income from abroad (current LCU)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government: Seats women in nat parliament (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Government: Seats women in nat parliament (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Government: Seats women in nat parliament (%)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Total (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Total (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Total (count)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Urban (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Urban (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Urban (count)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 0-14 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 0-14 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 15-64 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 15-64 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 65+ (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 65+ (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism inc (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism inc (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism inc (current US$)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism, exp (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism, exp (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism, exp (current US$)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measures with values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measures with values]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Measures with values</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.136659' measure-ordering='alphabetic' measure-percentage='0.863341' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Data by country (Worldbankdata) (2)' inline='true' name='excel-direct.42012.950994398147' version='10.2'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/E drive/Study/UB/Sem 2/CSE 587 DIC/Tableau/Worldbankdata.xlsx' interpretationMode='0' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.42012.950994398147leaf' name='&apos;Data by country$&apos;' table='[&apos;Data by country$&apos;]' type='table'>
          <columns gridOrigin='A1:BE2355:no:A1:BE2355:0' header='yes' outcome='2'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='Stock: Listed domestic companies (count)' ordinal='2' />
            <column datatype='integer' name='Stock: Market cap companies (current US$)' ordinal='3' />
            <column datatype='integer' name='Stock: Traded, total value (current US$)' ordinal='4' />
            <column datatype='integer' name='Stock: Market cap of companies (% GDP)' ordinal='5' />
            <column datatype='integer' name='Stock: Traded, total value (% GDP)' ordinal='6' />
            <column datatype='integer' name='Stock: Traded, turnover ratio (%)' ordinal='7' />
            <column datatype='integer' name='Banks: Comm branches (per 100k adults)' ordinal='8' />
            <column datatype='integer' name='Banks: Automated tellers (per 100k adults)' ordinal='9' />
            <column datatype='integer' name='Finance: Consumer price index (2005 = 100)' ordinal='10' />
            <column datatype='integer' name='Finance: Deposit interest rate (%)' ordinal='11' />
            <column datatype='integer' name='Finance: Lending interest rate (%)' ordinal='12' />
            <column datatype='integer' name='Finance: Real interest rate (%)' ordinal='13' />
            <column datatype='integer' name='Business: Start-up proc cost (% GNI per capita)' ordinal='14' />
            <column datatype='integer' name='Business: Cost to export ($ per container)' ordinal='15' />
            <column datatype='integer' name='Business: Cost to import ($ per container)' ordinal='16' />
            <column datatype='integer' name='Business: Ease of biz index (1=easiest)' ordinal='17' />
            <column datatype='integer' name='Business: Start-up procedures (count)' ordinal='18' />
            <column datatype='integer' name='Business: Legal rights (0=weak, 10=strong)' ordinal='19' />
            <column datatype='integer' name='Business: Time to start a business (days)' ordinal='20' />
            <column datatype='integer' name='Business: Time to prep &amp; pay taxes (hours)' ordinal='21' />
            <column datatype='integer' name='Business: Total tax rate (% of commercial profits)' ordinal='22' />
            <column datatype='integer' name='Business: Firing cost (weeks of wages)' ordinal='23' />
            <column datatype='integer' name='R&amp;D: Scientific &amp; tech articles' ordinal='24' />
            <column datatype='integer' name='Transit: Air transport, passengers (count)' ordinal='25' />
            <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='26' />
            <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='27' />
            <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='28' />
            <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='29' />
            <column datatype='integer' name='Military: Armed forces personnel' ordinal='30' />
            <column datatype='real' name='Military: Expenditure (% GDP)' ordinal='31' />
            <column datatype='real' name='Military: Expenditure (% central govt exp)' ordinal='32' />
            <column datatype='integer' name='Business: Exports (% GDP)' ordinal='33' />
            <column datatype='integer' name='Business: Imports (% GDP)' ordinal='34' />
            <column datatype='integer' name='Business: Trade (% GDP)' ordinal='35' />
            <column datatype='integer' name='Business: Exports (current US$)' ordinal='36' />
            <column datatype='integer' name='Business: Imports (current US$)' ordinal='37' />
            <column datatype='integer' name='Finance: GDP (current US$)' ordinal='38' />
            <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='39' />
            <column datatype='integer' name='Finance: Net income from abroad (current LCU)' ordinal='40' />
            <column datatype='integer' name='Government: Seats women in nat parliament (%)' ordinal='41' />
            <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='42' />
            <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='43' />
            <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='44' />
            <column datatype='integer' name='Population: Total (count)' ordinal='45' />
            <column datatype='integer' name='Population: Urban (count)' ordinal='46' />
            <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='47' />
            <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='48' />
            <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='49' />
            <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='50' />
            <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='51' />
            <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='52' />
            <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='53' />
            <column datatype='integer' name='Business: International tourism inc (current US$)' ordinal='54' />
            <column datatype='integer' name='Business: International tourism, exp (current US$)' ordinal='55' />
            <column datatype='integer' name='Measures with values' ordinal='56' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Listed domestic companies (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Listed domestic companies (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Listed domestic companies (count)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap companies (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap companies (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap companies (current US$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (current US$)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap of companies (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap of companies (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap of companies (% GDP)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (% GDP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, turnover ratio (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, turnover ratio (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, turnover ratio (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Comm branches (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Comm branches (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Comm branches (per 100k adults)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Automated tellers (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Automated tellers (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Automated tellers (per 100k adults)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Consumer price index (2005 = 100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Consumer price index (2005 = 100)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Consumer price index (2005 = 100)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Deposit interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Deposit interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Deposit interest rate (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Lending interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Lending interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Lending interest rate (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Real interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Real interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Real interest rate (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up proc cost (% GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up proc cost (% GNI per capita)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up proc cost (% GNI per capita)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to export ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to export ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to export ($ per container)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to import ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to import ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to import ($ per container)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Ease of biz index (1=easiest)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Ease of biz index (1=easiest)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Ease of biz index (1=easiest)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up procedures (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up procedures (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up procedures (count)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Legal rights (0=weak, 10=strong)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Legal rights (0=weak, 10=strong)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Legal rights (0=weak, 10=strong)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to start a business (days)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to start a business (days)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to start a business (days)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to prep &amp; pay taxes (hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to prep &amp; pay taxes (hours)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to prep &amp; pay taxes (hours)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Total tax rate (% of commercial profits)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Total tax rate (% of commercial profits)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Total tax rate (% of commercial profits)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Firing cost (weeks of wages)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Firing cost (weeks of wages)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Firing cost (weeks of wages)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R&amp;D: Scientific &amp; tech articles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[R&amp;D: Scientific &amp; tech articles]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>R&amp;D: Scientific &amp; tech articles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Air transport, passengers (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Air transport, passengers (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Air transport, passengers (count)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Railways, (million passenger-km)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Railways, (million passenger-km)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Mobile phone subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Mobile phone subscribers]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Mobile phone subscribers</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Internet users (per 100 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Internet users (per 100 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Internet users (per 100 people)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Armed forces personnel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Military: Armed forces personnel]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Armed forces personnel</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% GDP)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% central govt exp)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% central govt exp)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% central govt exp)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (% GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (% GDP)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Trade (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Trade (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Trade (% GDP)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (current US$)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (current US$)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP (current US$)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Net income from abroad (current LCU)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Net income from abroad (current LCU)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Net income from abroad (current LCU)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government: Seats women in nat parliament (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Government: Seats women in nat parliament (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Government: Seats women in nat parliament (%)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Total (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Total (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Total (count)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Urban (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Urban (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Urban (count)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 0-14 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 0-14 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 15-64 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 15-64 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 65+ (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 65+ (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism inc (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism inc (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism inc (current US$)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism, exp (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism, exp (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism, exp (current US$)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measures with values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measures with values]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Measures with values</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BE2355:no:A1:BE2355:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.136659' measure-ordering='alphabetic' measure-percentage='0.863341' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' palette='tableau-20' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Korea, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42012.950994398147].[none:Country Name:nk]'>
            <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[none:Country Name:nk]</column>
            <column>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='499' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' />
              <text column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='GDPPerCapita'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Finance: GDP per capita (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP per capita (current US$)]' derivation='Sum' name='[sum:Finance: GDP per capita (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[Latitude (generated)]</column>
            <column>[excel-direct.42012.950994398147].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' include-totals='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
            <format attr='break-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern-only' value='dashed' />
            <format attr='line-visibility' value='on' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <color column='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' />
              <geometry column='[excel-direct.42012.950994398147].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[Latitude (generated)]</rows>
        <cols>[excel-direct.42012.950994398147].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='GDPYear'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <tooltip column='[excel-direct.42012.950994398147].[attr:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</rows>
        <cols>[excel-direct.42012.950994398147].[tyr:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Population'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population: Total (count)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population: Total (count)]' derivation='Sum' name='[sum:Population: Total (count):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <size column='[excel-direct.42012.950994398147].[sum:Population: Total (count):qk]' />
              <lod column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <tooltip column='[excel-direct.42012.950994398147].[attr:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[Latitude (generated)]</rows>
        <cols>[excel-direct.42012.950994398147].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='PopulationAge'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population: Ages 0-14 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 15-64 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 65+ (% of total)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population: Ages 0-14 (% of total)]' derivation='Sum' name='[sum:Population: Ages 0-14 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 15-64 (% of total)]' derivation='Sum' name='[sum:Population: Ages 15-64 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 65+ (% of total)]' derivation='Sum' name='[sum:Population: Ages 65+ (% of total):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42012.950994398147].[none:Country Name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Aruba&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]</column>
            <column>[excel-direct.42012.950994398147].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 15-64 (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 65+ (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[none:Country Name:nk]</rows>
        <cols>([excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk] + ([excel-direct.42012.950994398147].[sum:Population: Ages 15-64 (% of total):qk] + [excel-direct.42012.950994398147].[sum:Population: Ages 65+ (% of total):qk]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='World GDP/Population Show' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4461' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4461' />
            <zone h='83817' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15768'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='World Population' captured-sheet='Population' id='1' />
                  <story-point caption='GDP' captured-sheet='WorldGDPDashboard' id='4' />
                  <story-point caption='Population Age Breakup' captured-sheet='PopulationAge' id='5' />
                  <story-point caption='GDP Growth' captured-sheet='GDPYear' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WorldData' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World GDP Data</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='965' maxwidth='1016' minheight='965' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4457' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11296' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4457' />
            <zone h='83832' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15753'>
              <flipboard active-id='5' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='World Population' captured-sheet='Population' id='3'>
                    <capturedDeltas>
                      <worksheet name='Population'>
                        <filter class='quantitative' column='[excel-direct.42012.950994398147].[Latitude (generated)]' included-values='non-null' />
                        <filter class='quantitative' column='[excel-direct.42012.950994398147].[Longitude (generated)]' included-values='non-null' />
                        <style delta-type='added'>
                          <style-rule element='table'>
                            <format attr='break-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                            <format attr='omit-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                            <format attr='show-null-value-warning' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='GDP and GDPper capita' captured-sheet='WorldGDPDashboard' id='4'>
                    <capturedDeltas>
                      <worksheet name='GDPPerCapita'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
                                  <field>[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]</field>
                                  <field>[excel-direct.42012.950994398147].[Geometry (generated)]</field>
                                  <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                                  <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;China&quot;</value>
                                <value>23937</value>
                                <value>&quot;MULTIPOLYGON (((110.6906 20.1494,110.784 20.0176,110.9323 20.0176,111.0367 19.6386,110.9763 19.6386,110.8609 19.5232,110.806 19.5287,110.762 19.4243,110.6741 19.3859,110.5698 19.1332,110.5698 19.0508,110.5148 18.9903,110.5203 18.7871,110.4654 18.7706,110.4105 18.6607,110.2621 18.6662,110.1083 18.5399,110.0149 18.4135,109.7677 18.3971,109.7183 18.2982,109.7458 18.2542,109.57 18.2103,109.4546 18.2817,109.3118 18.3092,109.18 18.2872,109.1031 18.3641,108.9877 18.3586,108.8284 18.463,108.6856 18.5069,108.6911 18.7376,108.6196 18.8255,108.6581 18.9409,108.6141 19.1002,108.6746 19.1716,108.6306 19.2156,108.6856 19.3749,108.8723 19.4628,109.0042 19.5836,109.18 19.655,109.2074 19.721,109.158 19.7924,109.2624 19.9022,109.3173 19.9187,109.4052 19.8638,109.5205 19.8528,109.5151 19.9132,109.581 19.9846,109.7128 20.0121,109.8666 19.9407,109.938 19.9956,110.0095 19.9297,110.1193 20.0011,110.1578 20.067,110.2567 20.0341,110.3775 20.078,110.5753 20.0231,110.5698 20.0945,110.6906 20.1494)),((110.4215 21.0833,110.5533 21.0503,110.5039 20.9734,110.3555 20.9954,110.3116 21.0778,110.4215 21.0833)),((121.9574 30.1803,122.1003 30.1583,122.2266 30.1033,122.331 30.0209,122.32 29.9495,122.1662 29.9935,122.0289 29.9935,121.9739 30.0594,121.9574 30.1803)),((119.7711 25.6428,119.848 25.5494,119.837 25.4725,119.7052 25.434,119.7272 25.5219,119.6832 25.5988,119.7711 25.6428)),((121.4795 39.6508,121.5345 39.5739,121.4301 39.5079,121.3422 39.5244,121.3202 39.5903,121.4795 39.6508)),((114.227 22.5477,114.218 22.556,114.2088 22.5574,114.1865 22.5547,114.1778 22.5557,114.176 22.5602,114.1601 22.5614,114.1525 22.5551,114.1486 22.5422,114.1294 22.5422,114.1161 22.535,114.1125 22.5297,114.1072 22.5345,114.0969 22.5339,114.0914 22.5375,114.0784 22.5299,114.0849 22.5218,114.0787 22.5155,114.0727 22.5181,114.0603 22.5135,114.0557 22.5028,114.0392 22.5038,114.0265 22.5219,114.0151 22.523,114.0013 22.5269,113.9042 22.5335,113.7779 22.6819,113.7614 22.7533,113.668 22.7423,113.6131 22.8027,113.5856 22.9236,113.4922 22.9455,113.5252 22.8357,113.6131 22.7588,113.5691 22.7423,113.6021 22.6324,113.5527 22.572,113.5691 22.4896,113.5307 22.4017,113.6021 22.3687,113.5856 22.2424,113.5501 22.2222,113.5374 22.2222,113.5292 22.2165,113.5226 22.2274,113.5142 22.2362,113.528 22.1981,113.5168 22.1777,113.4593 22.1655,113.3384 22.193,113.2231 22.0336,113.1132 22.0721,113.1187 22.1875,113.0857 22.2039,113.0033 22.116,113.0308 21.9458,112.9099 21.8524,112.8385 21.9732,112.7451 21.9238,112.6408 21.781,112.5584 21.759,112.4155 21.8414,112.3991 21.737,112.2343 21.704,112.1738 21.8084,112.0145 21.7864,111.8937 21.6766,111.8277 21.6986,111.8442 21.7645,111.7728 21.7864,111.7618 21.6271,111.652 21.5283,111.597 21.5502,111.4817 21.5063,111.4322 21.5502,111.2729 21.4184,111.229 21.4843,111.0752 21.4623,110.8939 21.3854,110.7511 21.3854,110.6302 21.2261,110.4874 21.2206,110.3665 21.0998,110.2072 21.0394,110.1688 20.924,110.2017 20.8471,110.3226 20.8526,110.394 20.7922,110.3281 20.6823,110.405 20.5944,110.4709 20.5834,110.5368 20.479,110.4434 20.3307,110.3061 20.2593,110.1962 20.2758,110.1248 20.2428,110.0644 20.2923,109.938 20.2923,110.0149 20.4516,109.8337 20.5065,109.8337 20.5724,109.7403 20.6658,109.7787 20.7043,109.7623 20.8086,109.7018 20.8306,109.6689 20.9405,109.7128 21.0613,109.6744 21.1108,109.7732 21.2316,109.7677 21.336,109.9161 21.3635,109.9106 21.4733,109.8062 21.5063,109.7458 21.5832,109.7787 21.4898,109.6579 21.5173,109.6744 21.5997,109.5865 21.5832,109.5425 21.5008,109.4381 21.4568,109.158 21.4074,109.0481 21.4623,109.169 21.5283,109.1525 21.5832,108.9602 21.5997,108.7899 21.6436,108.746 21.6052,108.6856 21.704,108.6141 21.715,108.5592 21.7919,108.6141 21.8469,108.5482 21.8908,108.4878 21.8359,108.5757 21.6931,108.4768 21.5612,108.3944 21.5557,108.3669 21.6546,108.3175 21.6766,108.323 21.5887,108.1692 21.6052,108.1362 21.5447,107.9989 21.5447,107.9604 21.5447,107.878 21.6491,107.8231 21.6601,107.6693 21.6052,107.499 21.6162,107.488 21.6601,107.3672 21.6107,107.3067 21.7425,107.2353 21.704,107.087 21.8139,107.0266 21.8249,107.0595 21.9238,106.9991 21.9567,106.8068 21.9787,106.708 22.0282,106.6805 22.182,106.6915 22.2808,106.6585 22.3358,106.5761 22.3413,106.5651 22.4127,106.5926 22.5445,106.7189 22.6104,106.8288 22.8027,106.6585 22.8686,106.6036 22.9291,106.3234 22.8631,106.2191 22.9895,106.0103 22.995,105.9993 22.94,105.884 22.9181,105.7247 23.0664,105.5763 23.0939,105.5324 23.2037,105.439 23.3081,105.4115 23.2916,105.3291 23.3905,105.2193 23.2751,105.0819 23.2642,104.9556 23.1763,104.8183 23.1268,104.8457 22.9675,104.7359 22.8247,104.604 22.8302,104.3678 22.6928,104.2744 22.7423,104.2799 22.8357,104.0986 22.7917,104.0382 22.7148,104.0162 22.5226,103.9668 22.5061,103.824 22.6159,103.6482 22.7972,103.5218 22.594,103.4339 22.7148,103.4449 22.7533,103.3405 22.8192,103.2856 22.6874,103.2032 22.6544,103.1867 22.5665,103.0329 22.4456,102.934 22.4896,102.8846 22.594,102.7033 22.7038,102.577 22.7093,102.5165 22.7807,102.3298 22.5555,102.2529 22.4566,102.2693 22.4182,102.1485 22.4017,102.0331 22.4731,101.8738 22.3852,101.8024 22.4896,101.6871 22.4731,101.6266 22.2808,101.5497 22.2479,101.6047 22.16,101.5772 22.116,101.6211 21.9677,101.7145 21.9293,101.7804 21.8304,101.753 21.726,101.8244 21.6052,101.764 21.5777,101.7804 21.5118,101.742 21.314,101.8464 21.2426,101.731 21.1382,101.6761 21.1987,101.5992 21.1822,101.5607 21.2481,101.3959 21.2261,101.286 21.1767,101.2311 21.314,101.2696 21.3744,101.1982 21.4129,101.2146 21.5612,101.1762 21.5612,101.1487 21.5612,101.1597 21.6711,101.0883 21.77,101.0114 21.7095,100.885 21.6876,100.7257 21.5118,100.5829 21.4514,100.484 21.4568,100.4291 21.5447,100.2533 21.4678,100.127 21.5173,100.105 21.5942,100.1709 21.6656,100.127 21.704,99.9951 21.704,99.9402 21.8249,99.9951 21.9732,99.9622 22.0556,99.8688 22.0282,99.4787 22.138,99.3579 22.0941,99.2151 22.1215,99.1766 22.1875,99.237 22.2534,99.2535 22.3907,99.3634 22.4841,99.3854 22.5775,99.3139 22.7368,99.3908 22.8192,99.5611 22.9346,99.5172 23.0829,99.3249 23.1103,99.1766 23.0939,99.0503 23.1213,99.0338 23.1598,98.891 23.2092,98.9459 23.3081,98.9239 23.418,98.8031 23.5388,98.891 23.6157,98.8525 23.6322,98.8086 23.7695,98.6987 23.786,98.6822 23.9124,98.7756 24.0277,98.9019 24.1101,98.7152 24.1321,98.6108 24.0882,98.5504 24.1321,98.1164 24.0991,97.7923 23.9563,97.7099 23.8684,97.6385 23.8629,97.5396 23.9288,97.7428 24.1101,97.7428 24.2255,97.7813 24.2584,97.6824 24.3024,97.7264 24.3793,97.6934 24.4507,97.5396 24.4342,97.578 24.5606,97.589 24.7638,97.6604 24.7858,97.7428 24.9122,97.7319 25.0824,97.8143 25.1648,97.8527 25.2747,97.9241 25.2143,98.0615 25.3077,98.1603 25.456,98.1274 25.5219,98.2427 25.6153,98.3142 25.5494,98.402 25.5933,98.479 25.7801,98.5394 25.846,98.6438 25.7911,98.7097 25.857,98.6822 25.9394,98.6163 25.9779,98.7426 26.1921,98.6767 26.2415,98.7371 26.3514,98.7536 26.5601,98.7866 26.6206,98.7481 26.714,98.7646 26.7964,98.7042 27.2139,98.7371 27.3512,98.6877 27.4885,98.7042 27.5654,98.5888 27.5709,98.5394 27.6204,98.4405 27.6313,98.4295 27.5544,98.3196 27.5215,98.3032 27.6313,98.2263 27.7192,98.2263 27.8126,98.1768 27.8401,98.1988 27.9335,98.1439 27.95,98.1603 28.1038,98.1327 28.1545,98.0314 28.1923,98.0261 28.2459,97.9121 28.3675,97.7965 28.332,97.7379 28.4227,97.721 28.4982,97.6658 28.5352,97.5639 28.5435,97.5066 28.4938,97.5216 28.4476,97.4815 28.3788,97.5027 28.3373,97.4627 28.2741,97.3473 28.2081,97.1462 28.3532,97.0782 28.3713,96.9769 28.3297,96.8893 28.3856,96.8614 28.4854,96.767 28.5148,96.7451 28.5715,96.6136 28.6138,96.495 28.6092,96.5358 28.681,96.6212 28.7354,96.5177 28.8864,96.5215 28.9303,96.5079 28.9469,96.4406 28.9529,96.4346 29.0066,96.3681 29.0383,96.3681 29.1085,96.2616 29.0889,96.2133 29.0277,96.1831 29.1108,96.3017 29.1773,96.2624 29.243,96.1831 29.2717,96.1392 29.3427,96.0539 29.3827,95.9655 29.3759,95.8484 29.3163,95.8386 29.3533,95.757 29.3223,95.7087 29.2037,95.6097 29.2347,95.5002 29.1818,95.5093 29.1267,95.2993 29.1365,95.2728 29.1055,95.1361 29.0881,95.0968 29.1418,94.9941 29.144,94.7516 29.2294,94.6935 29.3178,94.5409 29.2196,94.4571 29.2128,94.3793 29.1538,94.2931 29.1523,94.2758 29.1131,94.3302 29.039,94.2607 28.9318,94.1783 28.9363,94.136 28.8902,93.9751 28.8215,93.8966 28.7573,93.7901 28.7369,93.707 28.6644,93.6231 28.6885,93.4486 28.6689,93.3308 28.6062,93.185 28.4944,93.1473 28.366,92.932 28.2489,92.9214 28.2006,92.7907 28.1877,92.6774 28.1507,92.6585 28.0744,92.7318 28.0548,92.7326 27.9861,92.6464 27.9128,92.478 27.8342,92.3194 27.7972,92.2937 27.8705,92.2129 27.8727,91.9236 27.7179,91.8503 27.7625,91.6433 27.761,91.5708 27.8478,91.6259 27.8894,91.4904 27.9677,91.3203 28.0637,91.2491 28.0637,91.1992 27.9882,91.1187 27.9939,91.0208 28.0221,90.9201 28.0488,90.8377 28.0433,90.7799 28.0419,90.6878 28.079,90.5835 28.0231,90.5042 28.0654,90.4846 28.1356,90.5473 28.1575,90.5737 28.2451,90.3479 28.3041,90.2686 28.2791,90.2119 28.36,90.1809 28.3207,90.0593 28.3456,89.9823 28.3154,89.8659 28.3124,89.7655 28.1824,89.5963 28.1636,89.4589 28.0049,89.3893 27.8901,89.3655 27.8676,89.2979 27.8524,89.2254 27.7836,89.2284 27.7345,89.128 27.6152,89.0531 27.608,88.978 27.5313,88.9515 27.4108,89.0043 27.3261,88.9232 27.325,88.8879 27.3403,88.8379 27.3792,88.7828 27.4543,88.7741 27.544,88.8485 27.668,88.8568 27.8153,88.8817 27.8916,88.8364 28.0155,88.7548 28.0805,88.6672 28.0767,88.6332 28.1228,88.5652 28.0903,88.5448 28.0344,88.4093 27.9821,88.251 27.9422,88.135 27.95,88.135 27.8785,87.9843 27.8869,87.8314 27.9514,87.7245 27.8048,87.6135 27.8123,87.5855 27.8531,87.4518 27.8229,87.4246 27.8607,87.3604 27.8282,87.2652 27.8501,87.2267 27.8206,87.1096 27.8478,87.0379 27.9506,86.9336 27.9619,86.8724 28.0231,86.7901 28.0193,86.7486 28.0986,86.5778 28.1135,86.5355 28.051,86.5144 27.9573,86.4419 27.906,86.2908 27.9777,86.2266 27.9815,86.1904 28.1707,86.0831 28.0903,86.0808 28.0155,86.1246 27.9271,86.065 27.8999,85.9471 27.9422,85.9773 27.9898,85.901 28.0533,85.8973 28.1107,85.8164 28.2028,85.7507 28.2361,85.7122 28.3856,85.5913 28.3078,85.4365 28.3343,85.3768 28.2776,85.2552 28.2935,85.2038 28.3403,85.1192 28.329,85.1087 28.3479,85.1004 28.4589,85.1479 28.4876,85.1978 28.6274,85.1147 28.687,85.0581 28.6825,84.9818 28.5911,84.8579 28.5715,84.6962 28.6364,84.6252 28.7369,84.4923 28.7354,84.4371 28.7694,84.4092 28.8509,84.2256 28.8932,84.2491 29.0368,84.1894 29.0473,84.2 29.1251,84.1214 29.2739,83.9628 29.3306,83.814 29.3027,83.8019 29.2551,83.7127 29.2445,83.6334 29.1584,83.5179 29.2181,83.4166 29.357,83.4136 29.422,83.2814 29.499,83.261 29.5776,83.15 29.6244,83.0699 29.6093,83.0088 29.6743,82.9566 29.6622,82.9143 29.7075,82.8275 29.6902,82.7515 29.7628,82.7021 29.8397,82.6401 29.8337,82.5623 29.9553,82.4974 29.9477,82.3969 30.0233,82.3637 30.0097,82.2466 30.0746,82.1665 30.0761,82.2058 30.1539,82.0993 30.2401,82.1061 30.3488,81.9951 30.3209,81.6181 30.444,81.5645 30.4297,81.5517 30.3722,81.4081 30.4206,81.4225 30.3043,81.3953 30.2068,81.2629 30.1418,81.2519 30.0539,81.245 30.0112,81.1332 30.0157,81.0916 30.0535,81.0833 30.1494,81.035 30.1978,81.0312 30.2476,80.927 30.2673,80.9073 30.3035,80.8016 30.3232,80.7343 30.401,80.6067 30.4712,80.5485 30.4485,80.4103 30.5248,80.2086 30.5883,80.1928 30.6661,80.2486 30.7197,80.1792 30.8058,80.1082 30.7817,80.0538 30.8391,79.9337 30.8791,79.8763 30.966,79.8559 30.9758,79.7524 31.006,79.6005 30.9388,79.5069 31.0324,79.4208 31.0559,79.4125 31.0725,79.4132 31.1072,79.3112 31.1495,79.3007 31.219,79.2266 31.2606,79.2501 31.2938,79.142 31.432,79.0748 31.4592,79.0106 31.3829,78.9449 31.3663,78.8837 31.2862,78.7689 31.3255,78.753 31.3852,78.7968 31.4441,78.7251 31.4849,78.7311 31.5325,78.8467 31.608,78.7598 31.6753,78.7024 31.8067,78.7681 31.9457,78.6835 32.1126,78.5967 32.1579,78.4886 32.2758,78.472 32.4412,78.4124 32.5175,78.4161 32.5673,78.5166 32.6142,78.611 32.5998,78.7228 32.6746,78.7817 32.6164,78.7576 32.5673,78.8135 32.4336,78.9683 32.3354,78.991 32.3717,79.1043 32.374,79.1315 32.4812,79.2485 32.5167,79.2757 32.5568,79.4049 32.5198,79.4525 32.6036,79.5386 32.6716,79.5575 32.7592,79.4804 32.8007,79.4714 32.8785,79.3656 32.9382,79.3286 33.0342,79.3649 33.0931,79.3747 33.1195,79.4102 33.1701,79.2168 33.2381,79.1519 33.1822,79.1451 33.186,79.0718 33.2245,79.0204 33.325,78.9351 33.3869,78.8361 33.4269,78.7326 33.569,78.7175 33.6233,78.7764 33.745,78.7425 34.0003,78.6563 34.032,78.6571 34.0743,78.7425 34.0924,78.8618 34.1657,78.926 34.1544,78.9849 34.3001,79.0574 34.2994,79.0068 34.4067,78.932 34.3802,78.7387 34.4595,78.71 34.526,78.6375 34.5434,78.5634 34.5094,78.5521 34.5713,78.4592 34.5691,78.29 34.6151,78.2711 34.7012,78.2084 34.7209,78.1857 34.7942,78.2371 34.8697,78.1774 34.9301,78.1465 35.0706,78.003 35.2406,78.0226 35.3584,78.0906 35.4226,78.1072 35.4392,78.0762 35.4959,78.0264 35.4694,77.9244 35.4974,77.9108 35.4619,77.8126 35.5223,77.6872 35.4536,77.5037 35.4891,77.4425 35.4619,77.3397 35.5178,77.3027 35.5457,77.194 35.5216,77.0618 35.6001,76.9182 35.6115,76.8533 35.6689,76.777 35.6583,76.6788 35.755,76.6153 35.7618,76.561 35.8222,76.5987 35.9,76.2988 35.8426,76.2732 35.8418,76.1651 35.823,76.1448 35.8373,76.1591 35.9174,76.1009 36.0163,76.0035 36.0171,75.9423 36.0707,75.9325 36.1357,76.0126 36.1727,75.9846 36.3502,76.0352 36.4091,75.9257 36.573,75.9423 36.5957,75.8041 36.7105,75.6893 36.7581,75.6485 36.7672,75.6213 36.7687,75.5699 36.7672,75.4687 36.7166,75.4211 36.7732,75.4204 36.8895,75.375 36.9469,75.2338 36.959,75.0291 37.0164,74.9173 36.9787,74.9135 36.9333,74.8984 36.9349,74.841 37.0429,74.8214 37.0542,74.739 37.0217,74.6975 37.0837,74.5804 37.0308,74.4958 37.0648,74.4558 37.1426,74.4951 37.1733,74.5011 37.2393,74.6582 37.2347,74.7496 37.2846,74.8093 37.2151,74.8932 37.2325,74.915 37.237,74.9105 37.2748,75.128 37.3246,75.094 37.3715,75.1537 37.4092,75.1323 37.4369,75.0554 37.5248,75.0313 37.5006,74.9324 37.5679,74.8969 37.6615,75.011 37.7763,74.9128 37.8564,74.9165 38.0248,74.8206 38.0853,74.804 38.1986,74.6982 38.228,74.7058 38.2824,74.6658 38.3806,74.6952 38.4252,74.5064 38.4713,74.2843 38.5982,74.1211 38.642,74.0721 38.5301,73.9238 38.5356,73.8039 38.6118,73.8054 38.6639,73.7442 38.7319,73.7669 38.7787,73.6981 38.852,73.757 38.9426,73.8341 38.9207,73.8537 38.9524,73.8129 39.0423,73.751 39.0257,73.6143 39.247,73.5614 39.25,73.5259 39.3913,73.5924 39.4117,73.5984 39.4578,73.6601 39.464,73.8213 39.4593,73.8636 39.4789,73.9414 39.6028,73.9149 39.7146,73.8304 39.7716,73.9127 39.8634,73.9104 39.9095,73.9814 40.0001,73.9504 40.0273,74.0282 40.084,74.0758 40.0742,74.2631 40.1248,74.3402 40.084,74.5237 40.2041,74.5857 40.2743,74.6801 40.2645,74.6945 40.3423,74.8017 40.3506,74.8629 40.3174,74.9082 40.3461,74.7896 40.4465,74.8251 40.5227,74.8347 40.5239,74.9877 40.4507,75.2202 40.4418,75.4022 40.5546,75.4604 40.6089,75.5933 40.6588,75.6409 40.507,75.7201 40.4857,75.715 40.4375,75.6432 40.3831,75.6998 40.2773,75.8245 40.3374,75.8959 40.3045,75.9673 40.3759,76.0881 40.3812,76.187 40.3814,76.2781 40.4331,76.3351 40.3382,76.4454 40.3929,76.5375 40.4647,76.5338 40.5123,76.6485 40.6286,76.6728 40.6943,76.641 40.7623,76.7022 40.7887,76.7299 40.875,76.7551 40.9534,76.8533 40.9768,76.8797 41.0274,76.9968 41.072,77.0844 41.0629,77.1849 41.0108,77.2755 41.0017,77.3548 41.041,77.478 40.9957,77.6872 41.0032,77.8776 41.0735,77.9833 41.078,78.0596 41.0327,78.1903 41.0788,78.2195 41.1449,78.2745 41.2109,78.3843 41.2713,78.3897 41.4081,78.5279 41.4398,78.5551 41.4746,78.645 41.4686,78.713 41.5532,78.815 41.5584,78.9366 41.64,79.1254 41.7231,79.2176 41.7269,79.3226 41.8107,79.4102 41.8409,79.6043 41.8561,79.6398 41.8938,79.7735 41.8938,79.88 42.0336,80.0251 42.0487,80.1391 42.0305,80.2262 42.0626,80.1481 42.1176,80.1316 42.168,80.1736 42.2129,80.1784 42.2209,80.2713 42.2262,80.2842 42.3191,80.2267 42.3591,80.2048 42.4279,80.2191 42.4853,80.2576 42.5018,80.1618 42.6318,80.223 42.7126,80.2622 42.8297,80.3272 42.8237,80.4004 42.8259,80.5886 42.8901,80.3808 43.0223,80.4114 43.0566,80.5927 43.1335,80.7245 43.1335,80.8014 43.1775,80.7789 43.3116,80.6837 43.3283,80.7532 43.4657,80.5228 43.823,80.5092 43.9069,80.4526 43.9847,80.445 44.0746,80.3944 44.1116,80.4058 44.2914,80.3491 44.4787,80.4111 44.6094,80.337 44.6894,80.2381 44.7212,80.1467 44.8277,79.9933 44.7952,79.914 44.9009,80.0923 45.0482,80.2411 45.0278,80.3189 45.0709,80.402 45.049,80.4934 45.1215,80.6059 45.1102,80.73 45.1716,80.8545 45.1283,80.9519 45.1668,81.075 45.1744,81.1128 45.2197,81.4527 45.2688,81.6264 45.3541,81.7692 45.3768,81.9225 45.2295,82.0457 45.2537,82.0993 45.2046,82.2405 45.2356,82.3066 45.2265,82.4717 45.1766,82.582 45.2182,82.5865 45.3428,82.5412 45.4214,82.4165 45.4737,82.27 45.5505,82.2572 45.6185,82.3471 45.8028,82.3335 45.9388,82.4543 45.9766,82.5125 46.1563,82.6582 46.3911,82.7627 46.5791,82.7784 46.6851,82.8902 46.8762,82.9309 47.0114,82.98 47.0311,82.9933 47.0558,83.0307 47.2123,83.1749 47.2237,83.2444 47.1784,83.3434 47.1761,83.5556 47.0681,84.0383 46.9653,84.2151 46.9993,84.4205 47.0107,84.5074 46.9782,84.7045 46.9963,84.7841 46.9074,84.806 46.825,84.9599 46.869,84.9825 46.9193,85.0701 46.9329,85.2197 47.0515,85.5294 47.0598,85.5762 47.1904,85.6903 47.2184,85.7069 47.3755,85.6034 47.5198,85.6216 47.6074,85.5415 47.9398,85.5808 48.1392,85.7356 48.3711,85.8406 48.4255,86.0498 48.4474,86.2145 48.4353,86.318 48.501,86.4479 48.4987,86.5884 48.5433,86.6337 48.6249,86.7629 48.7148,86.7516 48.7941,86.8105 48.85,86.7387 48.9059,86.7229 48.9905,86.8294 49.0501,86.8551 49.1076,86.9857 49.103,87.1346 49.1506,87.2214 49.1144,87.3126 49.0997,87.4382 49.0847,87.701 49.1707,87.8329 49.1762,87.8548 49.0444,87.9153 48.9949,87.767 48.9345,87.7505 48.885,87.9247 48.7624,88.0002 48.7624,88.0735 48.6913,88.0145 48.6551,88.004 48.566,88.3499 48.4708,88.4172 48.3907,88.4935 48.4156,88.6015 48.3439,88.5841 48.2344,88.7941 48.2162,88.9452 48.0878,89.023 48.0946,89.0705 48.047,89.0713 47.9466,89.1929 47.9503,89.3183 48.0281,89.5661 48.0485,89.6174 47.9458,89.7255 47.8922,89.7965 47.8181,89.9302 47.8166,89.9641 47.8846,90.0752 47.8529,90.0797 47.766,90.1432 47.723,90.3237 47.6671,90.3267 47.6225,90.4566 47.4873,90.4914 47.38,90.4755 47.3241,90.5178 47.2441,90.7346 47.0016,90.8812 46.9767,90.9146 46.9514,90.9658 46.8619,90.9537 46.8271,91.063 46.7097,91.03 46.6053,91.0794 46.5614,90.9733 46.361,90.8962 46.3053,91.0118 46.1239,91.0217 46.0226,90.8479 45.8874,90.7127 45.725,90.6689 45.4863,90.7671 45.432,90.8328 45.299,90.8963 45.2476,90.8645 45.2038,90.931 45.1925,91.1221 45.2144,91.2415 45.1321,91.3857 45.1117,91.4371 45.1547,91.5587 45.0686,91.6909 45.0618,91.8004 45.0815,92.0996 45.0754,92.2348 45.0135,92.3065 45.0256,92.4803 45.0006,92.7756 45.0497,92.9297 45.0157,93.1737 45.0127,93.5083 44.9651,93.6481 44.9206,93.8157 44.8224,94.1972 44.6622,94.306 44.5897,94.3339 44.5232,94.4465 44.5029,94.5756 44.4485,94.6957 44.348,94.9307 44.2891,94.9903 44.2543,95.1898 44.2649,95.4081 44.2944,95.415 44.2505,95.3721 44.2256,95.3227 44.027,95.5236 44.0005,95.6218 43.8517,95.7336 43.5972,95.8569 43.4113,95.8779 43.2761,95.9089 43.2354,96.3591 42.8992,96.3855 42.724,96.6936 42.7325,96.9353 42.7105,97.1496 42.7765,97.3803 42.749,97.7538 42.7105,98.0175 42.6831,98.2482 42.6391,98.5119 42.6336,99.292 42.5842,99.4952 42.5677,99.9951 42.6501,100.2808 42.6281,100.3247 42.6831,100.9125 42.6446,101.8189 42.4743,102.0606 42.2161,102.4122 42.1392,102.7418 42.1337,102.978 42.0239,103.3241 41.9085,103.8624 41.8096,104.0272 41.8096,104.5436 41.8865,104.5326 41.6613,104.9446 41.6448,105.0325 41.5679,105.2742 41.7437,105.3072 41.7327,105.8016 41.958,106.0103 42.0184,106.686 42.2601,107.2683 42.359,107.2957 42.4084,107.4551 42.4633,107.5539 42.4249,107.911 42.4139,108.0319 42.4414,108.2571 42.4524,108.5263 42.4579,108.7844 42.4084,108.8119 42.3864,108.9657 42.4579,109.2898 42.4304,109.548 42.4743,109.8337 42.6227,110.1523 42.6391,110.416 42.771,110.4544 42.8589,110.6192 42.9303,110.7016 43.0566,110.817 43.128,111.0477 43.3423,111.3718 43.4412,111.4377 43.4961,111.5696 43.5071,111.7124 43.6169,111.7618 43.6939,111.9706 43.7378,112.009 43.8037,111.8497 43.996,111.6684 44.0344,111.5091 44.1883,111.3938 44.3201,111.3883 44.3915,111.5146 44.5893,111.5641 44.7376,111.7399 44.9628,111.8662 45.0672,112.0859 45.0782,112.4155 45.0617,112.5968 44.9408,112.8275 44.8584,112.8989 44.8639,113.1187 44.798,113.4977 44.7925,113.5746 44.7541,114.0471 44.9518,114.3767 45.1661,114.4865 45.2869,114.5469 45.3968,114.7502 45.4517,115.0633 45.3693,115.338 45.3858,115.5797 45.4297,115.7225 45.4407,115.7665 45.5012,115.9368 45.611,116.0906 45.6824,116.1675 45.6769,116.2719 45.7593,116.2609 45.9516,116.3652 46.067,116.6069 46.2977,116.6893 46.3087,116.7663 46.3142,116.8596 46.3801,116.9365 46.3526,117.365 46.3471,117.4364 46.5778,117.6012 46.5833,117.7001 46.5064,117.8539 46.5339,117.8814 46.5778,118.0407 46.6328,118.2714 46.7866,118.5626 46.7701,118.6724 46.8031,118.7988 46.7811,118.9361 46.8196,119.0954 46.7811,119.1284 46.7207,119.2163 46.6822,119.3261 46.6932,119.436 46.6493,119.4525 46.5504,119.4031 46.457,119.5129 46.4185,119.5953 46.5504,119.7766 46.6218,119.837 46.7042,119.9194 46.7426,119.8041 46.9239,119.87 47.1601,119.8151 47.27,119.7546 47.314,119.5569 47.3469,119.48 47.3304,119.3207 47.4348,119.3371 47.5337,119.1888 47.5172,119.1229 47.704,118.7768 47.8084,118.4802 48.0006,118.0737 48.0391,117.8375 48.0226,117.7605 47.9896,117.5573 47.7864,117.4694 47.7479,117.376 47.6381,117.1068 47.8084,116.8816 47.9017,116.6619 47.8633,116.6124 47.8358,116.4476 47.8413,116.2554 47.8743,116.14 47.8358,115.9368 47.6765,115.5522 47.9457,115.5742 48.0665,115.5193 48.1819,115.8104 48.2588,115.8324 48.3357,115.8214 48.5335,116.1125 48.7917,116.0576 48.885,116.4202 49.4344,116.6839 49.8189,116.7663 49.8244,117.0135 49.6926,117.2881 49.6321,117.5738 49.6376,117.8759 49.5388,118.1616 49.6596,118.2385 49.731,118.3813 49.775,118.3868 49.8244,118.4857 49.8354,118.5626 49.9233,118.9306 49.9837,119.0844 49.9837,119.2657 50.0771,119.3097 50.154,119.3426 50.3463,119.1559 50.3573,119.2547 50.4836,119.2767 50.6045,119.4305 50.6924,119.5074 50.7912,119.4909 50.8407,119.6173 51.0055,119.6887 51.0165,119.7491 51.0989,119.7766 51.2252,119.87 51.2966,119.9029 51.39,119.9853 51.4504,120.0897 51.6757,120.1721 51.6812,120.4742 51.8844,120.6445 51.9284,120.683 52.0327,120.7764 52.1591,120.7544 52.2525,120.6226 52.3129,120.6775 52.4282,120.683 52.5106,120.4523 52.6425,120.26 52.615,120.1886 52.5766,120.0623 52.5821,120.0238 52.6315,120.0238 52.7578,120.282 52.8622,120.5292 53.071,120.6281 53.1039,120.683 53.1753,120.8753 53.2852,121.1225 53.2742,121.4081 53.3237,121.8146 53.417,122.0234 53.4225,122.1387 53.4665,122.3145 53.4994,122.4409 53.4445,122.6441 53.461,122.8309 53.4555,123.0396 53.5104,123.111 53.4994,123.2758 53.5599,123.4406 53.5324,123.5835 53.5489,123.6769 53.4885,123.8581 53.483,124.1163 53.3456,124.2482 53.3676,124.3745 53.2468,124.5283 53.1973,124.7041 53.1863,124.8305 53.1314,124.9843 53.1918,125.1985 53.1918,125.4842 53.0929,125.5776 53.082,125.7369 52.9776,125.6545 52.9062,125.6709 52.8567,125.7753 52.8952,125.9676 52.7633,126.05 52.7963,126.05 52.67,125.9731 52.659,126.006 52.5821,126.072 52.5985,126.1928 52.5326,126.3411 52.3953,126.3411 52.2525,126.2972 52.2085,126.4675 52.1701,126.5554 52.1096,126.5059 52.0272,126.4455 52.0217,126.462 51.9448,126.6707 51.7251,126.7366 51.6317,126.6927 51.5768,126.83 51.5273,126.7861 51.4504,126.885 51.401,126.9784 51.3076,126.896 51.1868,126.9234 51.0604,127.1102 50.9341,127.3574 50.5825,127.286 50.4781,127.3574 50.4232,127.3299 50.3573,127.3958 50.2804,127.5716 50.2419,127.5881 50.1595,127.5002 50.0606,127.4947 49.9782,127.5387 49.9233,127.5167 49.8354,127.665 49.764,127.698 49.6651,127.8024 49.5937,127.9452 49.6157,128.066 49.5442,128.2583 49.5003,128.3846 49.5882,128.533 49.5992,128.7088 49.5662,128.7747 49.4728,128.879 49.4783,128.9944 49.4509,129.0493 49.374,129.1317 49.352,129.2032 49.4014,129.3405 49.352,129.3844 49.4289,129.5218 49.4124,129.5492 49.2916,129.6701 49.2916,129.736 49.2092,129.8459 49.1652,129.9063 49.0553,130.2579 48.8631,130.4446 48.9015,130.5161 48.8521,130.6259 48.8796,130.6369 48.8136,130.527 48.6378,130.5875 48.5939,130.6204 48.484,130.7578 48.495,130.7303 48.4401,130.8237 48.3028,130.7523 48.1874,130.6534 48.0995,130.6809 48.0446,130.8621 47.9347,130.95 47.8193,130.9555 47.7205,131.0324 47.6875,131.1588 47.693,131.2522 47.7314,131.4994 47.726,131.5818 47.66,131.6971 47.7095,131.8015 47.671,131.9663 47.6655,131.9993 47.704,132.2465 47.704,132.3179 47.7534,132.5046 47.7095,132.598 47.7424,132.5925 47.7919,132.6914 47.9512,132.7848 47.9292,132.8782 48.0006,133.01 48.0171,133.1584 48.105,133.3451 48.105,133.466 48.0665,133.5539 48.116,133.8011 48.1984,133.8725 48.1874,133.8945 48.2588,134.0098 48.2808,134.0483 48.3357,134.3889 48.3852,134.5756 48.3632,134.713 48.2753,134.669 48.1654,134.5482 48.0226,134.5866 47.9072,134.658 47.8908,134.6745 47.8248,134.7734 47.7534,134.7514 47.6765,134.669 47.5831,134.4932 47.4458,134.3339 47.4348,134.1856 47.3304,134.1472 47.248,134.2241 47.1821,134.2131 47.1052,134.1362 47.0887,134.0648 46.9734,134.0208 46.8196,134.0483 46.7756,133.9988 46.6383,133.9109 46.5833,133.8505 46.4625,133.9439 46.3911,133.878 46.3581,133.9109 46.2647,133.7022 46.1604,133.7352 46.045,133.6637 45.9406,133.466 45.8308,133.477 45.655,133.3177 45.4957,133.2133 45.5121,133.1364 45.4188,133.0869 45.2814,133.1309 45.1331,132.9496 45.0177,132.8617 45.0562,132.8374 45.0616,132.8039 45.1764,132.7312 45.2439,132.57 45.3063,132.331 45.3427,132.1023 45.3063,132.0063 45.2469,131.9993 45.2485,131.9114 45.3309,131.829 45.3089,131.763 45.21,131.6806 45.2155,131.6861 45.1166,131.4719 44.9573,131.3456 44.9793,131.2906 44.9298,131.1478 44.9353,130.9555 44.8529,131.1038 44.6936,131.2906 44.0784,131.2027 43.7817,131.2302 43.6334,131.1972 43.5236,131.2851 43.4741,131.3071 43.3972,131.1917 43.2104,131.2027 43.1335,131.0984 43.0182,131.1368 42.9577,131.0214 42.9193,131.016 42.8534,130.8237 42.8699,130.7688 42.8314,130.6864 42.8424,130.5435 42.8094,130.4062 42.7215,130.5325 42.6996,130.6204 42.6227,130.56 42.5348,130.6149 42.4304,130.56 42.4524,130.4996 42.6172,130.3787 42.6007,130.2524 42.7051,130.2249 42.7875,130.2579 42.9028,130.1425 42.8973,130.1096 42.9468,129.9502 42.9797,129.8514 42.9632,129.7635 42.7105,129.7415 42.4633,129.6261 42.4633,129.5492 42.359,129.4449 42.4414,129.313 42.4249,129.2361 42.3755,129.2526 42.3205,129.1812 42.2326,129.2141 42.2107,129.0109 42.0953,128.9175 42.0129,128.7417 42.0404,128.5714 41.9964,128.4396 42.0294,128.2363 42.0294,128.066 41.9635,128.1045 41.7987,128.1539 41.7272,128.2748 41.6503,128.3132 41.5844,128.2034 41.4086,128.11 41.3647,127.9287 41.4526,127.8628 41.4031,127.5552 41.4306,127.5442 41.4745,127.3519 41.4636,127.264 41.513,127.1157 41.546,127.1212 41.6229,127.0553 41.6613,127.0443 41.7437,126.9289 41.8096,126.7971 41.6943,126.6213 41.6723,126.5609 41.6119,126.5883 41.5624,126.5004 41.4306,126.5279 41.3647,126.407 41.3207,126.2862 41.1614,126.1598 41.0845,126.0335 40.9252,125.9346 40.8758,125.8687 40.9032,125.7039 40.8648,125.4128 40.656,125.3249 40.6396,125.182 40.6011,125.0117 40.5297,125.0227 40.4583,124.8964 40.4803,124.7371 40.3649,124.7206 40.3209,124.5228 40.2276,124.3361 40.0628,124.3525 39.9913,124.2262 39.9199,124.2042 39.8595,123.9955 39.8156,123.8581 39.854,123.7867 39.8265,123.6109 39.843,123.4352 39.7332,123.4022 39.7826,123.3033 39.7771,123.2758 39.6947,123.133 39.6617,122.9902 39.6672,122.9353 39.6178,122.7924 39.5848,122.4848 39.4145,122.3914 39.42,122.298 39.3706,122.2376 39.2772,122.1113 39.2058,122.0948 39.1234,121.9629 39.03,121.897 39.074,121.7926 39.019,121.7212 39.0355,121.5839 38.8817,121.496 38.8213,121.3367 38.8213,121.2049 38.7224,121.1389 38.7224,121.095 38.9256,121.2268 38.9311,121.3422 38.9751,121.3752 39.0575,121.4576 39.0135,121.6608 39.0795,121.6278 39.2772,121.7542 39.3212,121.7542 39.3761,121.5235 39.3596,121.4466 39.4805,121.5509 39.5903,121.5509 39.6727,121.4576 39.7387,121.54 39.8595,121.6114 39.8595,121.6993 39.9254,121.7762 39.9144,122.0344 40.1891,122.1058 40.2331,122.287 40.4857,122.1442 40.6011,122.1168 40.678,122.0344 40.7384,121.8586 40.8153,121.8036 40.9142,121.7652 40.8483,121.5564 40.8428,121.4905 40.9032,121.1774 40.9252,121.062 40.8208,120.9741 40.8318,120.9192 40.7659,120.9357 40.689,120.8368 40.678,120.7929 40.5956,120.6226 40.4803,120.5566 40.3539,120.4962 40.3209,120.4468 40.1946,119.9414 40.0518,119.848 39.9859,119.5239 39.8815,119.5294 39.8101,119.4635 39.8101,119.3591 39.7441,119.2437 39.475,119.2987 39.4365,119.0844 39.2497,119.0075 39.2003,118.7933 39.1289,118.5681 39.1564,118.3319 39.0025,118.1835 39.0849,118.0847 39.2003,118.0077 39.2058,117.9144 39.1948,117.7496 39.0849,117.7825 38.9861,117.7166 38.9696,117.5738 38.7718,117.5573 38.618,117.7001 38.3763,117.8155 38.2609,117.8649 38.2719,118.0901 38.1401,118.3868 38.1456,118.5681 38.1071,118.5736 38.1401,118.8372 38.2115,118.8482 38.0961,118.9251 38.0687,119.002 37.9588,119.0295 37.8599,119.002 37.805,119.0789 37.7006,118.9746 37.6072,118.9526 37.5029,118.9965 37.2941,119.1229 37.2117,119.2822 37.1568,119.7381 37.1403,119.881 37.2337,119.9414 37.4095,120.1447 37.4754,120.2985 37.5908,120.2875 37.6787,120.4468 37.7501,120.5731 37.7556,120.7434 37.8325,120.9357 37.8215,120.9357 37.7775,121.0456 37.7061,121.1389 37.7116,121.1444 37.6017,121.2433 37.5743,121.3642 37.5853,121.4685 37.4699,121.5729 37.426,121.6663 37.4589,121.941 37.4699,122.1168 37.5523,122.1717 37.4315,122.2431 37.4644,122.3255 37.4095,122.5672 37.3985,122.6057 37.3765,122.5507 37.2776,122.6002 37.2117,122.4903 37.1568,122.4573 37.0744,122.5452 36.9755,122.342 36.8327,122.1827 36.8766,122.1662 36.9535,122.0453 36.9371,122.0014 36.9975,121.919 36.9316,121.6663 36.8217,121.5894 36.8547,121.3587 36.7173,121.1444 36.6844,121.0181 36.58,120.9192 36.569,120.9632 36.4756,120.8808 36.3767,120.8368 36.4646,120.7105 36.4427,120.6775 36.2504,120.6885 36.1295,120.5457 36.1131,120.4248 36.0581,120.304 36.0856,120.3699 36.2119,120.293 36.2614,120.2655 36.179,120.2216 36.2284,120.1117 36.19,120.0952 36.1076,120.1886 36.0581,120.1886 35.9043,120.0677 35.8823,120.0128 35.723,119.9524 35.767,119.9194 35.6516,119.8645 35.6077,119.7436 35.6296,119.6448 35.5582,119.5624 35.3769,119.4085 35.2671,119.3701 35.1078,119.2822 35.0858,119.2218 35.0583,119.1778 34.8551,119.2273 34.7782,119.4525 34.7397,119.4745 34.6628,119.5569 34.6024,119.7931 34.498,119.7931 34.4705,119.9469 34.4541,120.271 34.3112,120.3314 34.1135,120.3918 33.9981,120.4083 33.8333,120.5182 33.7344,120.5292 33.6081,120.6116 33.4817,120.5951 33.3664,120.7654 33.1357,120.7929 33.0423,120.8862 33.0203,120.9082 32.883,120.8808 32.7896,120.9302 32.6962,120.9027 32.6138,120.9961 32.5424,121.0785 32.5259,121.3642 32.3941,121.4026 32.2567,121.3642 32.2403,121.4246 32.1139,121.529 32.1084,121.7267 32.0315,121.8311 31.9107,121.9025 31.7678,121.8696 31.6854,121.6333 31.7349,121.474 31.8283,121.3037 31.8832,121.084 31.7953,120.9357 31.8228,120.9082 31.9161,120.8093 32.015,120.5347 32.0919,120.4358 32.059,120.4523 32.0205,120.6116 31.9876,120.7214 31.9931,120.8148 31.8667,120.8038 31.7898,121.0016 31.7568,121.2213 31.6305,121.3312 31.4987,121.7048 31.2954,121.8146 31.1361,121.9135 30.9383,121.8531 30.8614,121.518 30.8285,121.3312 30.7021,121.2708 30.7021,121.1389 30.6032,121.0291 30.5813,120.9357 30.4824,120.9137 30.3725,120.7599 30.3505,120.6555 30.4055,120.6116 30.3615,120.6665 30.2132,120.6665 30.1308,120.8478 30.1308,121.084 30.2791,121.1994 30.3231,121.3477 30.3066,121.5015 30.1857,121.6278 30.0155,121.7926 29.9715,121.941 29.8891,121.9904 29.8177,121.8696 29.7573,121.8586 29.6968,121.7102 29.5705,121.5235 29.5101,121.518 29.4606,121.7212 29.543,121.7707 29.4716,121.8421 29.5375,121.7926 29.6089,121.9245 29.6474,121.9959 29.587,121.919 29.5265,121.9794 29.4387,121.919 29.4222,121.908 29.3013,121.9629 29.2629,121.9355 29.1969,121.8421 29.164,121.6224 29.1969,121.5949 29.2739,121.4521 29.1585,121.4576 29.1091,121.5784 29.12,121.6333 29.0926,121.6773 28.8564,121.6333 28.7245,121.507 28.6586,121.5894 28.4773,121.5949 28.3675,121.6553 28.3235,121.6169 28.2576,121.5784 28.307,121.463 28.3345,121.3806 28.2356,121.3587 28.1422,121.2708 28.1972,121.2213 28.3565,121.1334 28.34,121.1005 28.1862,121.0181 28.1477,120.9577 27.9774,120.8643 27.9335,120.8478 27.8676,120.6775 27.7028,120.6116 27.5984,120.6281 27.494,120.672 27.4775,120.65 27.3677,120.5292 27.3457,120.5621 27.2963,120.4797 27.1644,120.4248 27.1974,120.3699 27.0985,120.282 27.104,120.2271 26.9172,120.1227 26.9337,120.0348 26.8238,120.1172 26.7964,120.0952 26.6151,119.9524 26.6096,119.8865 26.5162,119.8425 26.5876,119.9414 26.6096,120.0348 26.714,120.0458 26.7909,119.9359 26.7964,119.87 26.6755,119.7766 26.8128,119.6777 26.7634,119.5788 26.7909,119.6008 26.5876,119.6667 26.6206,119.7876 26.5766,119.8315 26.4503,119.6173 26.4668,119.6557 26.3624,119.7162 26.3129,119.6448 26.269,119.6503 26.2031,119.5129 26.0767,119.7217 26.0053,119.6887 25.9174,119.5843 25.835,119.6338 25.7636,119.5843 25.6922,119.469 25.6757,119.5184 25.5549,119.6393 25.467,119.6557 25.3571,119.6063 25.3461,119.5733 25.456,119.5184 25.423,119.4525 25.5109,119.3646 25.5274,119.3371 25.5878,119.1339 25.412,119.2108 25.2692,119.2877 25.3296,119.3481 25.2747,119.2822 25.1703,119.1778 25.1813,118.9965 25.2967,118.9032 25.2637,118.9801 25.1978,118.9306 25.1154,118.8537 25.0879,118.9032 25.0275,118.9087 24.9176,118.7823 24.8572,118.623 24.8352,118.6505 24.7913,118.7713 24.7693,118.7329 24.6979,118.6395 24.6485,118.6505 24.5551,118.4967 24.6265,118.2989 24.5935,118.1616 24.6814,118.1011 24.5551,118.189 24.5276,118.1286 24.4232,118.0572 24.4947,117.9803 24.4562,117.8869 24.4892,117.9034 24.3958,118.0627 24.4068,118.0517 24.3573,118.1286 24.3079,118.0352 24.2145,117.9363 24.22,117.9528 24.1651,117.9034 24.0332,117.799 24.0058,117.7111 24.0332,117.7001 23.9508,117.6012 23.8629,117.5024 23.9179,117.4364 23.7531,117.387 23.786,117.2716 23.7366,117.2167 23.6212,117.1783 23.6157,117.0849 23.5718,117.0574 23.6487,116.9091 23.6377,116.8706 23.4509,116.7553 23.3411,116.7333 23.2477,116.6454 23.1653,116.6015 23.1982,116.5355 23.1158,116.5575 23.0224,116.4971 22.94,116.2664 22.951,116.0961 22.8247,116.0686 22.8522,115.9038 22.7917,115.6456 22.8796,115.5687 22.8302,115.4698 22.7038,115.3819 22.6928,115.3105 22.7917,115.2171 22.8357,115.0468 22.7917,115.0249 22.7038,114.8875 22.594,114.7502 22.594,114.7557 22.7588,114.8216 22.7917,114.7777 22.8357,114.5195 22.7093,114.5909 22.6544,114.5469 22.572,114.6239 22.5116,114.514 22.4511,114.3931 22.6159,114.227 22.5477)),((121.3202 31.8502,121.4411 31.7513,121.5839 31.6635,121.875 31.5591,121.8201 31.4602,121.5949 31.5206,121.3806 31.6195,121.1499 31.7843,121.2268 31.8392,121.3202 31.8502)))&quot;</value>
                                <value>35.175300000000007</value>
                                <value>99.387700000000009</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Age Breakup' captured-sheet='PopulationAge' id='5' />
                  <story-point caption='GDP Growth' captured-sheet='GDPYear' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WorldGDPDashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='863' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='100000' id='9' name='GDP' w='50000' x='0' y='0' />
                <zone h='100000' id='10' name='GDPPerCapita' w='50000' x='50000' y='0' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[sum:Population: Total (count):qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GDPPerCapita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
            <field>[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='PopulationAge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GDPYear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='WorldGDPDashboard'>
      <viewpoints>
        <viewpoint name='GDP'>
          <geo-search-visibility value='1' />
        </viewpoint>
        <viewpoint name='GDPPerCapita'>
          <zoom type='entire-view' />
          <geo-search-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='WorldData'>
      <viewpoints />
      <active id='4' />
    </window>
    <window class='dashboard' maximized='true' name='World GDP/Population Show'>
      <viewpoints />
      <active id='4' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='GDP' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='GDPPerCapita' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDPYear' width='192'>
      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
      8fXlgwkUEjV+2cJBWLysprNEOD/QWwzk9qViVwbsqoBdGdCRiq5U9KRkICQ5YHDoIraubOx6
      oSzLNflwk3JK5/Z9FP/BIHSOmtMoHIFlzIiBczPXSVcyo5iJpRPFOxJjZpVuwjZlasJCYk88
      mycAXJnyTOlPHdSrJvbc+9F3nj6e0v0zTM+eY+Emx9KJ2bQtvrUt6AtXFKe49/hjuGI4otDx
      4wK5ye/wQlCW6UgByAY7/NM/f8DKcsTdTc033vnyUT95JFoDx6q7OCnsvlfmDs0qpz8fPqV+
      ukITPJi5pSiYBqQWKA2rDi4JJhpRWJQ0SGmQQqOEQZmcwGQonSGswVrhG8RWYqzEIPG6tbQ1
      9wvH3o8up5ojs45wrqihvI+AE85L0vjHrmzWMf6wBZ2Zjz+x1byd7NzkXFmvCTcxCUVxvZh0
      807uw/j3YkojzwQcwtmZvPIeBYWJGcqsWTpzzd7jmW/qZnPKexQvcnx23PM3+6vZe/syHCkA
      W7fvoO2AZPEyrWGKKTbIiKLoqJ/uQ9q7war704mmOS6UsrTnvnd7Kd3UHHCyZKEDCuKmz0/+
      jvWrcwTGoKwmsAZpp+/i9t5oz132NMZL5hJT6b1Xij33dHtpuJlzYvxU3iwb6+DSVKOUzoPz
      XWGnj+8xkz8RudL0K9M+5uDrZ34np8omJ2UsjmfLM/0MYnKupPeo/CnTtKQ9NnGnns89TiN4
      ZX2dG5sDVhfbyDwlCALiOKbX6419UUrXiCRJAD/im+f5vmPykIcv/RfyxsJRZI8F37+xycN+
      vqdS2VvFHJB78CX+lDj4Auesb9c86neTK4+i/linfC/IIb97vLvP4hETaZy1yEMm2Rx2/4nR
      tOe5j3Azf9Sz7cudzpjVVY/13PMdCdba2+nB2ZvIcZa8QU+S1pmeEDPu9alQ4ZSg4sYK5xqV
      AFQ416gEoMK5RiUAFc41KgGocK7xVAIghBh77JVLdJdx6e130Lky/6Bzupi7WXoMPum9y3Pl
      JO5peuW9p5cT3/v7Mp7+/aOuedJne5zfP84zls8xTe+w9/A0z3jQ+y9pHfSOj+v9TZ+bpn+c
      z3HQ759KAJRS4zGAcvJyGU/P+d17zhgz/oAH/Q6YcV99kntP/668V/lyyuPpidZ7fz99bu/1
      B12zN296gvqjfvc49I96/hIlvSd5R4/zjAfRn36Pe9/xcb2/6XMl4z7Oe3yS5zjo9081EFah
      wlnBMx8Is3rEj3/0A+48HBHUEpqhRiC5c+ch3/rjf89q43iL8MEv/oXbd+5wd3PApYur9I3j
      stpl4c3v8NLK8Y5mZv0t/vZvvgeNJZSwmOEOSesSg9423/idb1MPj6+J5azh3Z/+gE9ud8ic
      YGW5gRCK3oN7vP2vvsvlxdqx0QK49fEHvHfjJmrYJW7UuPlQ88133uC963f5vW9+7VhpmbTL
      9/7++/R0gIwi6raDsSEjVeO7v/ONY6WFSfnh979Hd2TYGoln3wj2fv8xK8sL1CKFUyF61CeJ
      Y1L92ba32Q8/x3f98hpxnNAbakIluXBh5UAPnM8KIQPqi2t+WUWniZI6Js9YXLlErB7bA+cx
      iQm0kVy6dIFaFJA5hTA5G1cusbPbPV5agBSOy+vrhGHCoLNLnCTc+PQmg37v2GkJGRAmbRaa
      NSIpUFGMkxGtlbVjp+WERAQxqwsNwjB49jWAQ3BxfZ2FxWXSXJMEIKIag26XC+3j9y9ZWFpF
      xA2+vrLBQrtJd6hpJcovr3HcEIqNjYssLS9jncRmA1QQsNsdHD8tYPXSOo32EldeymkmAZqQ
      Ua/D0urqsdOqNRdYjgVXfm2ZpNWms7PLhQsrjEajY6flEKxvXGZxeZncOAKXESZNhoPjFzYc
      XFzfYHFphctpVrUBKpxvzNcZrsK5Rz7c5fZmH53nLLWbNBo1+iONdJr2whK7O9vsPLiFXLjK
      gw9/Sry0wdW1Rbq7W9BYoV1LWGg3jq08lQBUmCuCpM3dD/+RjZeu8uf/+y946ZWXuHVvk8WG
      4pvvfIV/+dGPuLGj+Xd//HnuO8Wgs8U/f/iP3OoFGCzLKxf5w2//q6fZDuzg8hzPbSpUeDwI
      IXj59TdYWlzkrTd7tNotFhaWWWjXiOuLLK2uceWNS9RjRatVp7ayQS8RXEraaOsQQXKs5fn/
      1XgjkRL3eOYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Population' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29SY9kWZYe9t032+xDDJmRWdmV2Ww2u9RNNKWF0JAgARoWEjda8GdoQf0C
      rShAWkvQThtxo73IllaCAEJoiISkQoukitWlrOzKzIiMwd3m4U2Xi+ffsfOuPTM393D3MI+w
      D3C4uw3Pnr13z7nnfGcyb9++tUmS4FOEtRar1QrGGGRZhqIo4Pu+PF+WJQDAGANrrfzN9xJ8
      DACSJEEYhsiyDMvlUl7neR6MMYjjGGmaoigKAECr1cJqtUJRFLXjuMe31sIYgyiKEIYhiqKA
      53nwPA8AkKYpgiBAURSIouhOr9PHjCBJEnQ6nQ99Hg+OLMuQpqn8H0WRLKqyLGuLkeBjvu8j
      DEMsl8uakMRxjE6ng8ViAc/zEARB7T3GGPi+jyRJRPCMMeh0OlitVrVFz2PyMd/3EccxyrIU
      AfI8D2EYIooipGmKMAwRxzGCIIDv+7Vza/o+jx38flQCt0FwVyfzmJBlGcbjce2xsizlQu5a
      /N1uF0VRYD6fy+NhGCIMQyRJgjzPMZ/P4XmeLEK+N89z0fxc3HmeI89zWGtFy+vn+ZgxRj4T
      WN/0IAiwXC7lce4CZVliOp0CAOI4RpIk77VQDhHL5RJhGMLzPOR5jrIsb7z7fZIC4Hke2u02
      VquVaBFX+zaZONZaTKdTWZTWWln4XKRBEMDzvNr7rbUiCBQ0vdj1Iuf7tMlljBETST8fxzGW
      y6U85/s+ZrOZmFX8bhSQdrt959fyQ4E7XhiGANY77E3xcamEa5DnuWjFKIpkIVpra7Y/gNqC
      BtbbLX8DEA0/mUzk4pdl2Wi/u/83+RL6c933NT2vfQeeS57nmEwmYt5pE+pjQZZlWK1WYsZS
      udzmO34yAsBFVxQFZrMZgEogaKs3mQe+78sC06YJUZYlyrLEYDCA53kYjUZYLBYbNvcuk0qf
      H3/0a7Qp5P7wNdZaBEGAxWJROx6fp5/wWEETEQCKopB7STMzyzJRPNyh98UnJQDj8VjscGMM
      Wq1WTXO78H0fQRA0ammi3W7D932Mx2MURSHOLN/TdNym4+wrEHr3ILQN7CKKInQ6nUfnBNNs
      pJ9ElGWJ2WwmuwAAYfC48+0rAIvF4tPxAay1wvAURYHlcilOq3Y2qfWTJJHXuuYKt9wkSRDH
      MRaLxQaNydc32fkumhxw1xkmtBBoLc/dzKVdH6PzS0WSZRmCIBCl0mq1AFSOflmWaLVamM/n
      sug9z0On09n7+8Zx/OkIQJqmyPNcFhbNBTqGtJmp8alVNHiRiVarhTRNsVwuG00kvmfb/3wt
      F6tLv7rHbDqWFggKku/78H0frVbrQWx/aukwDJHn+a0dUn08ay3a7Tbm8zniOEYcx/I5ZOJ0
      LIQ78U3ged7HLQB6gWRZJo8BkOBXmqZot9soyxK+7yNNU9laNeOi7XFy957nbbW7XWxbEC7d
      2aTd9bH1e9zneI70TR4iwGmtxXK5RJqmiOO4JgBRFNV2PWutBBt3CQiJh9lsJnETYwzG4zHa
      7TayLMNsNoPneeh2u2i327cWuI9aAGaz2QZVpncBapA8z2XRa2dRO1t6AQZBIK/jLkAb3F2c
      uxaw/oxt0K/TrJULHoPfNUkSWUj3hSzLRGkwNmKMkR1xPp/j9PRUXs9rv89i5Q7G++P7Pnq9
      ngg4v99qtXovevejFoAoipDnOaIoEq2oLz41Ek0da62kFOgosRaEoigQhqEcJ45jhGGIy8vL
      RvpyV3S3aSE3xQTcBdNkLhG+72OxWNwL51+WpdjjURRJJJznSwVDuLY4hXMfcAcBqu+kzU8K
      B/9+Hzwu7+iGiKJImJ52uy22tisEOoJIx9f3/UZnqt/vb5gW+9CefFwzNU3a0N0xXEbpOr8g
      yzIMBoN7YX3SNMV8Poe1FpPJRBQIbXQufl7nbrd7J+dB5dOEmzr41lrM53O5Dx/VDpBlGfI8
      RxzHG6wKF3QYhhtUGZmgIAhqdCIXaBiGCIIAcRw3Llqt9a6DNqdcu18/Ruxilpqe52K5T9qT
      uU6kKWmG0K/K8xxJkhxk8I30N/FRCcBisZCgCJPCCNqQzKfRjqfneZI+ADTz81mW1S4cHWtG
      Y9336dc17RC72CH3NdsoUX18/T93irumP8MwFJpYXz/6UK1WSxL2eO13EQMfCvpcHrUJ5AZ+
      2u22ZGnOZjNJCqOGprZyNXwURciyDMaY2o3jT5ZliKKoprlXq5UEXvR5bEttcOEGypoW8jbo
      xaePz++i06TvEppA4LnzXJbLJZbLpUTW+XxRFMLAHSIepQDwgg+Hw9rF1Qs4z3MRgvF4LMyE
      6wswd5+BF2o3FxSiNE0xmUxqmZmuU+umKjRBm2g3Wfw876bMVdriu6LP7wOaiVrQ9HXU2a76
      9YechvEoBYCLNQzDDe3L6KEODAGQ8Dm5aWutpDpoLdzE4BhjxP7ncfbZ2vXxtv3NY1xn6zcx
      R+7xaHPfl+0dRZH4UmS/eJ7dbhd5nteuzSH6AC4enQ+QpqlolKIoanZ+EATo9/tCeY5GI/EH
      FouFUGn9fr9W/eV5HtI0RZqmjTQmBYWvbaIgd2lt/XrXfGnaPbQTu21ncBf/tnjDXYILn1Qr
      rxcVThiGmM/n4is8Bjy6HSBNU0ynUzFvqOFJyRlTZXzmeS7h8TiOJdqbpmktA5SR323p0L1e
      D/1+XxZTt9ut8dkurUnohejSr7tYmqaF3MQa6edoEi0WC8zn8xuxUjeFPj/GQ7irMo2EKeeP
      AY9CAOjIpmmKTqcjF95dROSoWaRCe5/aWzuso9FIHF/a/lzY2i5v+pxWqyW1ueS6t/H5+nhE
      UzS3yXl2H3ePqXcRHc+4b+3L42ven5/PctHHgoM3gdI0lfx92p1JktScMIKR2qYUgFarVYuO
      MkDGvBTXmTbGbE0noEmTZZnYvE0UJR/TKRJN2GUSuXRok/Do2MJisZASyPuCFnidasLa5kN2
      el0c9A7AqB0XEfNCaJfT3OEC0hmBbgR1PB5jMpnIQmeahFsbzPdy13HNCRZgNBWxE9uitFpr
      u4Lb9Hqee9Ox3fPluQHYyGK9a9A0DIJgQ0GQLPiQIPPHuM4uHOwOYK0VO1+3AXFfM51OJUkK
      gOT5UzsHQSAmkzZ1yFFvA18fx/HGc51OB1EUYTab1RxQV4NftxC0gO4yoZrOjb/5Xppj+rj3
      CSqcQwOVHa9/0/3TOFgBmM1mwjJwm2WYvdVqSUoDuWcKB6We2nu5XErKLFNo2ZKEjAYdaLIZ
      nudhOp2i0+k0mkDbNDw7MpDJ2UaputgWtHLZHbc8Ux+PAq8Txu4bh2Lr684aDHTShL0OBysA
      2pnSLAcAWZx0+BgXoI9AZ1drY9/30el04Ps+RqOROMv6JuoF2+/3NyKfGtS4pFMpPAzSNW2/
      OgKtfzfBjRQzutu0U9Bkm06n6Ha7j8oGfx8w7sOKPCIMQ7Tb7b3SwQ9WAFqtlmg9csvaCZzP
      52Le6EL0druNyWQCYO0U8zjMX2ceuX4fj8ndhLvMNpD+a3qcF5/nsc+CB5ppTjd+wMdcU4s7
      GZMBP3ZYa7FYLOQeAus0aZ2ufh3MdDq1h94Zztoq/Vbn9GhwQVAjs4KIgbBOpyPVX91uVxY6
      weCWe8yTk5Nb59SUZYnhcHir9xKuCaXPZRs9ytSDj7ndpbVW4kH87u12+1YO+EGzQBqdTget
      VksyDinljDoy+1MngkVRJHw9bcQ8zze2Rtc0Ad6v3R6P1bQId8UAmtIltjnY/O3SpEmS1Ip8
      PkYwz4tgc4LbsE8HaQLphUC7l9sbTRegWerp/GmWoigKdLtdLJdL8S1oN7vJb3Rkb7KNNoGf
      71KproO8LYbAY/B3k2DogB0fz7LsvWpkb4NdDv59wG1Oxh3/Njg4ASiKAtPpVDx5HbDyfb9W
      JrePk6NTBbSpR8pQO8sUNtfceB8EQSCxBzfYpR/juTadv4bLArmL774yQXdBJx3eN2j+8L72
      er2PqzkuuW1qNHLtnudJB7Z9nDwGshiZjKJImlexezJZIU1d8hzuCi5zc92xXYfZLYPclg/E
      arcP0QTrIRPfVquV1GuzaP59cJACsM3edYNeGtPpVOphyfWT9+cCoV3MJlJAFW9gl+EkSaSz
      M7Wabn57G0RRJJmo+3z3bbuAq/X5nfg9Pna7n2Dqied5e9G9vCYUUl3EDxygE7ytxR81KYux
      9Q/7QWrtSC1vra1VcxGMFpOvD8NQTC/a7Gx1/j4VTWxUdVs0pU7wcWB9QzudDvr9/q0/5zFA
      t7XctxEWK9WAeoqIKJF7O9tboqlduZvNyYqsNE2lBni1WgnrwkXrRoe5ZTKAxq2UUWbtfNPf
      YBrGbdMLbupPNC34pr8p6DThmqLEHxPI+zPwuK/2Z21IkxKbz+eHJwB62AMAoTopGAxo0Rac
      TqcbrQU5gYUSzwVMIaEDTE1Pv8CNHDPxjcUft8VNHFO9szU9p1/Dv++7AdahgN+ZQzGuAxUk
      x1VRWfC5IAgOSwAorcBa0/V6vUbpJeVHDWuMEa6fVV+abtTt+vTn0Wxyq7ZIt/L9i8XiVgzL
      bTTyNrOH0AU2/A6HkpdzX1itVrX6g32gu1ewaZdueDydTg9LAMj00HbniWt2pmlxMDWZ2Z6k
      TcmIJElSS4dwoU0cd2ERZVlisVjUBt/tA8Yb9m0Yq4XQFUqeh34dz/+QOy/cBfQ92qfijdV/
      wNqKYJboarWSpgYHJQAAJA8nSRKcnp7K/03bvF4U5Po1WCPcarVEm7O+AFhXdgGQ6jCXcdHM
      DNut7JNnrt/f6/WkiOcm72tyfF2amMK9qz5Bg4rgPsHPaAo03hbtdlvYuKbO3RqsB9emou4D
      q+nigxEAfZE41EEXirht9/SX04vU7ftD00CPONKaVS98Ln7f92vRVJeCZO3tvguJFOy+5YKj
      0Wije50+F/1De3hfU+u+g1bcjabTKZbLJcbj8Y2u1TaQ+WGE/rpJMC5ZwB6xblubO0+Ga7pp
      u0DJnM1mtUhtE++tW25wOJx+rV7AOpffWovhcChCEEWROMJkFnRpI7D2GZomOPKYLLO87nu6
      0W2X6WqK7DZBCzr9GTrrpHs/FAtEbU9yQrdOpI8yGAze+3P09WHzg6Y8ID0nDYB09XNN2Dun
      DziDi+1I9ARF90uQqWHgig1WWa7I5DZKvO7xr/NhXDA3/uTkRDR+GIZiurj5QqwcY4CMN85N
      t9YXzvM8LJdL6Rm6C8wHorbWtmkTmgJiTd+XndhoZn2IxW+tlUWlfREKvbVWlBEDju8bFyG4
      bnTch8SHO1XTGCOv1UroXvgzmiuLxQLD4RCdTgfdble4d964VquFsixlO9L1v+zkxsKXdrst
      Toy+EPw/iiLJ8+exrbXS0ZhFEovFohYXACBFNGyPMhgMamyBbvutzSW36msb2FyXx2qC3mGa
      SiT5Wfp787F+v//gVKjeielfsWeTMQZpmkqW5rt37zCZTHByciKp2vuQAvTZtjXa9TwPvV5P
      7H1gnSDZ6XQ26r11NoBkCNzFxdgFLqTxeFzrW9NqtcROBNZ2Phc/F9l8PhebuNVqNeboMz1a
      mxbUtMwc1RqUGkJvk9TO/EyaFSz81lPfeZx9bXqyW1pLu4KjHfBtu5p+H1/3IRY/z0f7W/P5
      XO4n+Xc6m77v4/T0VJz18XiM4XB4reNOodIpLE19XvU9mM1mEhvS3bzLspR0em0qPsiVo0bT
      vPp0Om2kHwkuCObncCGzCzGpRc/zxMki60PQRp5MJjIqlEMd+LNcLuVxYB0E0w4m263r4Bq/
      l+4wtwu8YfuyNe57tfAxmq3bwD8k+F1Yk02Tl8VGZO3oe9FXYlESsJ72aK2t2fAsb2VLmpOT
      EyEeeO9pKTBt3W1VyYwB3SGE5iotC85VvjcBcG01/TjzbZq0nbs4XMqR5YbcMaiFV6uV7Byc
      jEhbng1jOSaVzi1Q7R4UIG1O8Vy5U7DSSs8Eo79DR2yXIDCOsE3Du4tcXwu+h0Pv3rdW4X1B
      rZumKcbjsZi3wLptDM1L1nLrvCt97rx+bGLGaffWWvR6PcnHouJxO3HoxQ+sr5lODuRrdScP
      mrf3JgCapnRTeptsZ5dl4WvdBCZOZefxaZ5om9Qdb0QnlQ63/mxu1XyM2qbb7YoZxRseRRGK
      oqgdnws7TdOdk1l2za91bXvXCTbGHFSxOxsRjMfjDWaHdrbOumSi4TZzkd0/Op2O7OSdTkdS
      XYBNdrGJQXOf17+Z/OjiXvZPnlTT9txEKbr0oJZYth7UC1SnJDBD0LXxtQDS9OD79WfkeS6m
      Gd+vbeowDHF6eipsVlEUoq308bjDbAuS6dc3MWJNPsFNfY2HAtvNbFuIVHJEURRid2+ra9Zp
      y7T1tbmor4fGLiqZv2nG6jwzee62F2EX3BNocvxcieZvlridnJyIFm6327WRm4wXcDHpTM4m
      utI1Ldxz081yWXOsz007xzSxqO11rMFtD67hfvZ1zp/+ftfFGnS2I4/Nneqm/sY+YOyE9Qhp
      maKwzTEZgn8zyKgpbmponW+lu/jp6+Veu22fx+doutLU0sew1j6MD7DtBN3Xcrukc8mFSXqT
      YIyAi9/9PGqZTqcjmqTJvubCttbWHN5tNjrNIV2VxK2a2mVb8Yy7GzYJpft8EATX9rex1srN
      7XQ6NQatLEtpYXhXPgP9t/l8LsHEcTZGN+wi8eoxH95zDrnm4Gug6rtkrZVWNa7puu0eaFy3
      xnj8Xf2d7kUAmjT+ri/ExQhAePx2u13L56ZDS6FYLpdiM2oTSIPTAF2bUJ+TMUZYoKZWf3pq
      DHcDZiZS6zP9eleRBjtXXJdHRHufDuF1C5d+EOMpOsMVgPDvdyUAvCc8N2stniZP5Vz6/T4G
      g0EthZwmjTtVBoDMbtiWbt60a7uPN9n8rkm87dj3xqG5wZx9GB/9OFMddAUYj0s2RY+7bLL9
      NWPSZJZRsCh8nDugfQzmjfBxUq3c/mkO9Pv9nakIFLTrwCKcfbU2z0P3Oh1jWHv+LrU/I/I6
      Y5fXVAe4XPICWKevUKGMRiMsFotrd7h9NL9rJunfTaYRH3swE0ifrLv9N0U5dccvTiAnqOX6
      /b4UOpDf159B06YoCnQ6HVi7Dp7wNTo0b4yRPBZ2o6BJw9dMp9NaXhFNkH20LM2aXem8+6ZN
      a9DEoHnRMxUzQxPqLgRAm1pkzgDUzEiCFXmajl4sFrVZzIvFAp1OR7rn7cKuteQ+7zrmu/xQ
      4AEEwNX8TWzItp2A2pmVPPo4NCfcFAUenwESlkYy/YKfq7tCcO4tULVLIWVHB0oXnzO1msdg
      9FqXZG4DHb/7gOd5SJKkUgjGrxEH7wt+P3L57Knqkhfs20Qzj79JU9OE7HQ60vz4Oug10rRm
      tKnTZA1ouMcA7kkAdjm8blW++0U0+EWaglCr1Uq2Tjq5fD0X92g0Eo2qi92p+fl+Opq0pTkS
      iY6ktuspeLzYSZIgTdO9E7ziON5647mIbwO2fmEO1F0JGjM8tXPtmpXMvcmyTHZrfX+DIJDG
      ZGxfaYzZ6Zxq7LL9+fw2UsF9zl1390aD7nI8ml6za5tjeSKLIoD1xBc99ZHHoUNIYdC2t7VW
      2ixqRFEkNi4XPgChE/mbTmqr1ZJ0XMYq9oEWPBd30W+fWnYX9q0gs9bW8rWa/DgSFsYYJ9Zi
      MbTvpNOeHkdFZugmu5PrDLsL3q1z2MWy6V3jXlkg90P5W5tBu0wh9/E0TaW6ium2HM9JU4TC
      QA7cHWMUx/FW08D3fXFw5/N5bbok38+EKrI6XEg3SfFttVri3LvX664c1l3IV3MU07cIn329
      9TXW1hsSN5EMmj4G6l3wAIMBzqQKy9oqfsKF2qS9m66HayFssxh2sT36WA+yA+gPbLK79Ak0
      nXiThOsJKMxBYYsUfZPcY7jHoXPbBK09ucj1eFQAktfCx5gDdJOCedYQuBr1oTqsRa0ukie/
      V3usafFoczVavJLro1uwuFrXZWCYp/X06VNRLrPZTN7vLuJ9FIBr42vzV3/2Lu3P999rKgTR
      NFja/QLub1fbcE4AS+x4DF11xMe4uGgX8zkWTdz0O7jnOplMsFgsRLPtY3a4x261Wuh2uxLV
      1o72fcM9X+6UTa/j9c3an6+1psqnYl8mrXD0fby8vJSdgbsmFdcuaIHcpiBd5cn/m55zwV3o
      zk0gFpTQHqQJAqwLT7QJ4m5tevHrRfj999/j2bNnEghzt8LRaLTRCoU2p2aGbmpisLW6C23K
      Ma36JqWlTGl2tdiHQlOkmsl/rk+kz5WKSRf9s/qNUX0OsiCFCkBiKtY2F+m7SnGXFeHu9voY
      rtmz0TjhhtfpWhizLioHINTYxcUFxuMxoiiS8kf9BZu2Q578ZDKR6Ogvf/lLPHnyBD9rn6Hw
      gF+9/A69Xk9uxGq1wtdffw1r7UaTrZtC+xL6nPgcz5nVZJxRcNPr9SEnukhp4JauG03fndw+
      75eeFqkXPe8HYwY6JUWzcvys6xgcgjsoLQG+1j1P9/8mBXPve64xVTDp6dOn6PV6MrFd1wPo
      xd/kCHe7XYxGI1xcXODJkyfo9/tITnpA5OPs7EzKHcuyxGAw2GB4eBGWy+W13QQ0dFmkNreA
      9fxinQfEXPNDB78Lu95tO2fdj4kmW6/XQ7fbFVNGJw9auy5cKcoS42U9G4DRYx6TDBL/5zH4
      e5ty5Gc3af2m79Lkb8jjDzkiKc9zyeefTCY1k8E1hdwT1eBWpi8WHVFy+hxUR22lj3WT0Uds
      o6Hf33SOPP9+v39QqctNYGCLNdB0+JuuM7U2zRuSDjRnWeqoZ5QVRYGXL18KS8Ye/p7nbfRf
      YvDO/dxdC5vC45aJ6uf3xYPW05FVITevy+PocAGbX0B/Ub3ota/AlAWmRpBuY1CL4E7AHJ7r
      NLbbxaDJIdPn/D49RB8K3MnIz29zSHldwzCUZsS6UTG/M02Z1Wol9G7fSZHQuz7BHUPDZXK2
      3R/d9pDnqo/Bn+vYuQcVAGOq3HZrq546rBHdZufpv12WwRUGJqsZY2ptSPQWz2PSKRsOh1tb
      HVKb8fOYEqHPqclv4XsPGbrdJHD9dPd0lSKdr6TVjT4O3w+skwnfvXuH9N07MUWvM0v0veRz
      LhGyzYzh8bdZELs6d9wbDboLvu8Ln9/tdkVjurSXe0HoXLvOmLu4qdHowLrlke7f7GagG2AB
      qAkTU4DdAE6T9mGtwKELgaZdt81kIGxewk5zCRACVR2EO56I5EcracG8eIHLy0th6Dgxs2kH
      B7bHcFhgr5PumtaGFoKme6Tfq9//QfpqM4BEzU1s+yKE+8X1b2utFITsasPXpF3YxoOJd7oe
      mCkVzPvXOUmuhuL5MWtyWz+bD4myLPH69Wvpn8OEQg4ab0LYijBur5v1DgYD8cNIEjBVZLVa
      oVvE8MPKTu92u3Kfr2Nnmv6noOoCd9cBdoWHlgWtAAoSQdZquVx+uBFJXGwnJyeNFVvA5tbZ
      lGOuFyGFyb24/Jsd57SA6fQJanpCaztmQzI5jsl2wHoyuW6pvlwukef5hg/yIVEUBZbLJUaj
      UZXD1EpQ5gXMlY2/LVDoeZ7Qm9wFWq2WNApmRi2v3yxIMZ/N8eTJEwBrFmkymUjbmiYWp4kJ
      ouPs7sx83hgj/f/1fdYEy9u3bzGfz9Hv91GWJS4vL9fn9qEGZTMFWTfC4pcCmu1pXhB98Vg6
      6S4y1hbTgWPFlm60BKDx/f1+X9pz6JvP8kqg3mWM/D93H70tM7/oEISA5mGRpYiSFpKrzNTs
      yolNkqSWkMfvS59KK5PlctlY/mmtrcVtrJ3AmB4A4PLyEkmSSEfrJqXHYxAkNLaZlMZU0WYq
      IXdH5ppZrVYYjUZSy10U1UD1D9YdmtttkiSSn7PNGSU0U6Sfa7LtyDgVRSGf5XYp3vZ+CiQL
      bcbjcS0rEqhPfeFAPp2WwWPdVXvwuwC1++TtGxhjEEYRcnZjmPyI9Op7AJBqvNevX28sfu6W
      gsKi+OXaxq+TBUntmpAidp1a9xrxcXdX3va9mnYu0qXWVukxT58+lYo7UZ77Xbq7hy5Ap6bW
      IIXVZBLpC7zNMaUNyMa320oDm97vOsRNwhkEQU0D8jXu5zxUfs8+YJuRz77+fcnft9bCFCt0
      /te/Dywuhc9fLmeYzf4FgOq7pZMx8vlMFpWGMQYmWT+2XC6FXJhOV6IgjDESV9nF5gCQznfA
      eufShImmYKnkrrvWWujo/xzEcCl+oaaglWvPbzMlmhxndi5YLBaS2qwpVX0hXb9gMpnUkrw8
      r2rEOpvNRKvrulien359p9OpDeT40KD5AdSZtQIxpn/vf4I1lbZ8/fo13q1ShKtn6PUq53H4
      3W/ghxHO//DfkHaIYRhWUVlj4f1hX7472SCmQpPqZtBsOp1isVjUHNMmx5fBTHbe49yBVqsl
      TBur+ujwamhT2TWthVX8UD6ABlkCMjFuDnoTtj3n7hjMQddbqV6kYRjWTBv3/XpLZ/DOtV91
      Zzk+1mq1pIHUofgAGnTUgfrQOWru7wvgC289hQZX32981SYyiWNMp1OkWSYNAYB10yyuKZIG
      bsEKqWpGol06NYoivHz5ssY60eEty1I+jy3XdbcJfX/criAbdOshCABPhu0xuCi30WZ8vV6E
      +gK7mp0/pF6lL6Tq/3/d+4HNuANLGHnxl8ulFNxYW3U94PZMk+nQkGUZ/uLtEH+n16olqBVF
      AZOVQFmiCD3RrkIvGgPP92CCEJeXl2JSrVYrnJ2dNbI7//0/+R7/6S+e4Gcn66BinucYj8c4
      PT2V18dxjPF4LAE7nZNEuBrdzSJYv9aiLNepM64iOggTCFhHicuyxMXFRS3l2YW7WPXj23h3
      7gLUIJqjPzk5wXA4bGSEdrFRQRAIVRrHMXq9nrxGB5fYUOumZYD3DZaO/nESbAQMPc+DjQyM
      CbBUfT3DMKzs8SuSIZ3OcHpyhsV0CXjrrhbGGEmxYL+kv/enz3HaDuB562uqE1FSJboAACAA
      SURBVOSoUNiFm2ko7jpo+r/pnlWO7gWMOa09rnEwOwBRFAWGw+FGspumtRq/yA4qjc/zvby4
      LLYnpUcu+7r3A2vniy3Ye71eTfi4q7APDlutHEqDW6C+62pWx/WjZrMZ+v2+NAkLggBhWcBG
      cW34iLUW4/FYhMX3fZg8R2IM7NVQOve6spc/bXnu0KRTW61WjTkitGmjtft1ZrH7/sOhKK6g
      eXfCle59HWMXfF2SJDK2x1orHQu29fVsOg++Hlh3TuCNYx97pgswffiQGCFgvetyYiIAlL/+
      Nab/7X8niiLLMgRPDMrZpLbrekmCi4uLKvu1HeK72XfSH6nT6awbGAQBxleRWd2vPwgCGXhC
      Baz9NCYysjabk4L4fp6vLi+9bvFTUHVDhcO6I6gvaJenb3pdE/d+HbIsk9JKNmFlaoAxVf3B
      rsIWDtVgkyva/7PZTIJuWkDDMJSBD4cIPefMe/ECyX/8HwkNnWUZOlkfZVzl/ff7fcRxjOEP
      3+PLOEa2WmF6OcW5Pa85oqvVv6yuy2qF8sqR7fV6kkbd7XaFoHDNS/74vo8vvvhCFIir6NgP
      VVsGTWuAjzGiT+WVZdnh+AAaentzH3edGbfDBHA9XcrX8P10urMsE5Om3W6LDUtbme8pikLs
      fXZA46LXbUIeC2o7bLeL4A//UBYgiYIoiuCVgBf4Utg0Ho9lp+AuSsq53f5jWGulWo/BTvYu
      4vXSSo6/ef86nY509iMtDUBMtsFggOVyKSnwrnns3mu3Q3RRFIcnANQ8/FtD23zue9zX8G/9
      GteOB9ZdyzhCxxgjdjHzldiTiDsOOWSG+8fjsVRGHfrC1yyYVhRu5z2i3erAWA/tTgv5r17h
      u7TAz37xAt1OB9PpFH+9+Gs86z7DT4uf0G11MRlN5BrzPr548UKOHcdxzWSJokg6fLgEBO8j
      e7gSLHxiugvLYfl9SEvrDFJgs1bD9/3DEwBt0mxSWhWavH69dfLLM8NRCwidOEKzFhyWoXOI
      SGtq29TN72GC16EvfqByznWjK2I4HFasS+Ij8RP0+/0qF2iRIVtVvHv+9TnOlinydAXTTvD8
      +XN4bzwsxiM8S84Qez4mSYY4SgBYeL7XWEeh/w7DEL1eDxcXF5IfZkyVHcCO0qSQ3XgNzU0W
      2APrsVX0K6jQPK9qZMy0CelldG9X+pZoorOA+nbGiLFrO/74448YDAaYz+fShm8+n2MwGGA8
      HqPdbuP169f45ptvRDCoXbjAKTRsAOsGz3gO287z0JHnOS4uLiQHi2C//m+n3+Lr7teSMkw7
      fT6fo93toLBVrGA6nSJJEjx79gyTKEKaLhFOvkPpPcNykiNqB5gvplL7AVTKjYFEmppAFWB8
      +vQpRqMR3vz2Nxi8+BkuLi6k3jsMQ5kqSvOHgsygYxiGKEwBLzCw6dqc4mhdEhLvsnf46uQr
      lGWJN2/eHKYAaDOmifMlG8BtT9uNb9++vbJB24j9Ei86Y0z9Dr59906cVx7HWis57FzEzF/f
      5lBz+PdjRRzHeJr0MSwWtQAiTbtfPP3FRlMB7qhkZrj4mFHZOznBT28vkXd/jrgoUJaZCAp3
      UqDeQ2g+n4t2ByC1F73PvpBFO51Oa5M/z87OkKYp3rx5Iz1cAcjo3bgdAzByjow2sxnXYDCA
      sVX2KB3ogxMAYLdGJXftMkTGGHzxxRdI03Rddvnbf4zo7V8iHvw+/vbf/s8khZlNcPX7aS82
      FdPw+Hc9beVDoCxLrEKLwFS3fjQaCQPGgeR6mDSAWj8frXE5wK56ziAJInjtQKq4aNu77U94
      vVmxx+vZbreRznMgjRF1SnRmIWyvlAAnC/l7vZ7yM2ay06MAAj8UJUnzyBiDs7MzzGYzREUE
      Exs5xkHSoDqpyWV2XDNEP/bdd99hsVjgV7/6VZX6HJ0AJkARn+LNmzfS219/lt5x9LH1rsLM
      1ce++IFK06ZXGbLWWpyenkrqhtvynOD3J3iPaN9HUYTzky68vIRVUXq2tdfm6mq1wk8//STH
      cWlPLwL8Vo7RaIRxskQJK6ZSU/1Bnr8FsO4/xRSa2WyGs7MzPH/+HCcnJ1evzYXG5f09yB2A
      BfOa9mxidly8ePECv/3tbyWw81v8HCfffAMT9zH+3e9g7TrVmdh2PG2GMWL82Bc/gJpf4y5y
      Kh43XqE7WrPplfse3/dhOjGKq+xPRr1d5iVJEnz22WeNUX0dqOSAbE17M6mO9HSVOvGFPN9u
      tyW3iMmITEM5zzNM2h2J+h+0ADAnRKcSbwtyaGRZhmfPngmDEAQBwu4p5vM5zs/PJd2Bx3Ox
      axc49F4/+yIMQ1lceso9KV1q7DzP5X+aKaQwGTfR8Q6merBNIj+LQqCDm1zUrLgD1m3o2YpS
      T5dhSgQVmM65ms1m4qwzCs+yTbJJq9UKP+QFZi9firkngnVouUCEtVU2pcv/bsvqa8r9dqOD
      u5ibXe/3PO9OB80dAhgJpcPLemG3S4cxVVJbHMfSzLcoCrwdzvHsrNsYk5E8G5XazmNxks5w
      OJR2knSK6btx3BUJCS08PA7/pyBR+OjLaAyHw1o27ng8Xrdqv+sLe1fglgbUHSfXedXPNQW+
      eCwdpncv4K73MyL5MS1+YJ23PxwO8ebNG1xeXgpF6Ras63Yo/L/bam40TGZJ8/P8KYoCv/v/
      /jmstbJQi3/xLzc+i/6J+9MUuKNCzLKsYnWiCHlZ9+8YtByPxxKVZtT/YAUAqLbQwWCwUXpI
      aCfKjR5vM3Fcf8J9TD8XhmGt2ONjAM0E3dqFpgXBRczrGscxTk9Pa7MSup3tcxbI27u7QxAE
      +OZP/rQ6/quXlUL7g78h1WXGGBRp9bnuXAYAsIXF9//vCNZu1mawveP/+d0Y//CfvZT3DIfD
      WhfuOI7RarUwGAwwmUwO0wcgKL0cRs2idpbbAZu5QE2+gis8+vnaBVbv50COfTI40zTDKsvR
      67Sufe1Dwa3AIhgk1KD5o1MUuMC0PU1ak5mZmhhgcIqLsemzGUvIsgyvYRBf5ebQryA42Z0m
      Es+pyC3efDfDiz/qw/PXwqfT0P/s5wP82c+rKZmsByeDFYahBAFJshy0AGj0ej3ZUikIvPjM
      yGTG5TbtDzQnyrk+BfP79zV7SmuRF/tPiHkINC1AmibZdAwvjODHiQSbds0nY20z7XI9dorl
      iOyIB6y7ajCZjc8zDWH6bgjMprBX0eCyLCuOPooQhJX50263MZvNajXMQWzwd/7ui8Zz5AAO
      Ou5kitgGBVizefQ7hsPh4xEA1olSotllgGDkkOmxtA813AWtx5aygovb701s/iSOkMSHbyZR
      CaTTCcJ2F4VZj4PScJkwoLo+mvWh82nMepAGH6egcffQvpsxBuWyROfUR4oR4uipJK/R+eXO
      wnRsPr/tnuhMUKZtMFdLfwd2qgbWw/0ejQDQKZ7NZo1Zl3RWdZNcXWUEQFobMieFNB0vHACp
      D9h1wQ8dTSYgbf+yLGG7AxS+j8CYGqVYvbmEP/kBRf9ntffqIRiaOAB2d8R2TVJjDLK4RJb1
      a6kQ3ME5ajWOQpyHC3SefCVdKLaB5ow0U4iBzKwQm7Vgz2Yz1axrvR4O2gl2wV2AiW4um8NF
      3+/3JTzOGzUYDGR2QBRFG0UWtE8pIPuMET1ksByTFOPl5aXMNut2u1IR5cJbjZD8P/8DgM0a
      Cw2XLtZEhG5i3CSM3W4X3W63MeLPdIwgjJC1nstILc0MuedGRReGITqdDv5p9r/jf5v9Ixhj
      pEcRk+9cxfaoBABYMxScz9v0PM2fKIoku3PfaiyaP4+hz/82kDygc0jTggtg11SYMjnF7N/7
      LwFsNgLQphH/Hv74Pcp8nSfE165pSwBY1x8wl7/J7GracVmb0ev1agvdDUwGQSDf64+SP8Uf
      J/8WrLWSG0Zhdz/j0QlAHMcYDAa1qYNAM+3JZri7tk8XLF/cpsEeE4wxMhJqNptJ+nCSJDLe
      yf1+TVq/KW7Cx09efAk/3KzV5f9F8Qaz2T+pPcZ0hG1KSQsQAHz77bdSpzEYDKSJr85dStNU
      skM/D36GL4OvAaDmfwhWK+S//CWK3/zmcCPB14HmTbvdlvTcpkghUG2RN0lh1k5T+naMzufn
      j9IfYF4MgI1ObGRJ2JiqyVbX15NMzbZxShrcZarjAkAOIJTngKoVTZNyMsUKJlugiAe1+1iW
      JU5PTysK9fVrPHnypFZMr30SUrbz+VxMWUaVcXmJi7//XyD/q78CcIAFMfui1WpJC3LmiZDf
      vizfYlRe4ufBHwDYvz8nA0LWruth8aR/b9/hPkGtD0A0Px8H1gufrAkHfm9z/pmfxaAV6UYS
      CU075fo4m31f0zSV/B0dZb56Re21QCXMr1+/RmYqRcYuHDSLXHD4ivZzfvjhB5z+z/9IFj/w
      iAWAWzn/brfbwgak5RKLsj54ownuVksBogbTJhaxXE4RBDGC4LCT43SvH9rdTQ4pGwBQmWhi
      gL/Zwp6loBQuxgTI4esWkZxASVCLc/GTsXEd8dKLgHhtUvE3hczLU6ywVlbz+XyTyUIl4Gdn
      ZzLUj+xPObysve7RCgDQzOuvVis897/Ec//LNe99NdxNv57bLyPLLBHUCXd8zWJU4MmLftUJ
      LZ3AGP/gBYDt3LmbueaNC+bHMCmNyLKslp1JU4NCw/ppCgJ3EnZ/0NF1mlIkL9gwrMlO1yaY
      /lx+lj7vbWAdAwNkX375JfL/4D/E/B//OUDK9LH6AC6olTjAgo/R/GFPGoKD8gBsjE2dXrUC
      ZG3w5HKBpFsF4IaTOZKrXpmHnCPESSjA1XUwBn6xQBFUi5tOJVBfbEVRSECRI025kNfMjhHT
      xZ3zS9ZGd8Hb1qWZ5Y78THeWgutQU6BtYPE6fY0/+exP9r4HOgUk+4u/wOLP/xeYXu/jEQBg
      neil6wh0VJg3nHkrzH3//PPPaxebAhCGVePXwWAgJXmj6RKhV0pfmlevXuHs7AxRFGEyXKB3
      0qqxEx8K1lpcXl6qBQf4+Ry5Xy1YdmoLggC/frPAHzxt1YRAmxZNfgGvdRNjtlwuGzWz64fQ
      dE2SBGmabgwx163V2YYyiiLAAK2kJbvSPuCQdDed/lGbQC7oF3D4AflvYG3XM4doPB4janfQ
      6W22LucWzeon1gLEcYxnqpzOGIMnT54gzwqMLqaYTacofvXPcPZn//4H7wJHEw5gspiRxQ9A
      OrQFQYDfO6vvBBQMrTwu5jlC36AXr9sbuhrdTaHYVrvB57ljP3/+XHbUV69eiaJi4h1NJ/oh
      7Xb7xkpGT5rU1+ijEgBCCwLz3q21MiRjNptVDm4YoLxq6S1NX9WFpd2oj6t/AxDnstuzGJy1
      sXi6GZy7T1CwXW3IwRJ0hHVSmltmGvn1oSEuOWCtRTf2QXZGmz/Ve97BmCcidJqZM8ZguAAi
      H2g71ornefj1ZY7z81ycaCavGWNQLBcwZi1sz58/v3Vdtjtil/goBYAwxmxEDelExfFcbNP0
      //8/MOz+DRRFgc8+++zGbU94w6IowcuXP8HzwkZm4j5grcXLly/x1Vdf1QQgz3N0ggLGLzHJ
      AylV1M4sFxJNRlKT2u7nMSMfANZsGWMH1Q7xVHZapqnwugCA71U/7nnP53N83Uvw8uVLnJ2d
      Sbc3wvgBPG897PB9Rs5SKTJaTEH4qAWgCZ7nVWZLfoK/eDvE30SJSetrxEFQ60C8C/QdmrTR
      POnjn//4Gv/2k+9xfv5H9/U1BJ7n4Ztvvtl43FqLSWpg8gRJr+r/r3Pred6Xl5dih7M/qs6j
      ohCQqdEOrWvTa9NQoxtR664fz64my9BUZK0B3xtFEcKrfKG78qdoAWh8cgIArHeGf/ezalbs
      bNbCJCuQ2XLnxabWytIc08sl+ucd9Adrk6coCgzKFf6dF88Qhw/nBG9LA4miCOPQQ3FVeDKZ
      TFAUhfg0w+FQktKWkwxRJ5LGU91uVxxZcvjUwMYYvHr1Cs+fP5f/KVhuXyVtWqVpKjsE83v4
      mjiOMRtNcPr0vNZKnmYV/9dtEG8K0qi6SP+TFACCF6HT6WB1cYHCFlsZD84wm81mOD09Rfsk
      hPFsre99lmXoBhGSKEK0Zer6Q4ETcMLpFGXQQbvbxeu8RD9dSqdlUpGj0Qi+7+PND0PEnR6Q
      9FCW68nsMB58h/7UrUX4m/Y/5wrQ79BtJ33fF5oVWO8enueh5VWdoHkc3UmOu8X7zlhgwJTn
      /EkLAGFMlaL74/R3wFvg/PxcJrtoR5qtQHQevDtU4/ZW6t2DjWdfvXqFMIoQlFXu1Lt379Dv
      92vjS1lxBy/AKs8Rtypf4HeXFq9GOf7N3wvh2WoxcmEyFYIllWVZ4uzsDBcXF5KjxYQ7dpOj
      ALh+iLUWeWQwubiAS8vTBLsLaHOu3W4/vmzQ+0IURfi902+qLsI//oh0OoXv+/jhhx8wmUyk
      7810Oq3lrmiHCgAKD7gcDjdszQ+FIAgqk+df/StgPJL8INY8dzodSR3v9XpIfKATebKrtSKD
      XlKNEjLG1OoJGDmezWZot9ti0pB06HQ6OD09xfn5uQjAZDKR3cPzPHT//D9HcPlXtbQMBil5
      rjfh+6+DMVXNCNs3flSBsLuCngN8cXEhj+toJO1J0mvh5QWy0zPpnHxyciL29YcOipVlidFo
      VGWHjiZotRMkUYTi179G8XWVNhxdlPC/6GB68Q42jITlIdgzSC9SALUuz8vVr9BK/iYAT54n
      q/T69Ws8ffpUor4sWQxHv0XR+wKlF9acaEb02cHhPq5hURRHAbgOi8VCNL7mkVkYziENBIvD
      pzbGWWxrkVIO0vsQAkEndPh2gtlqXOuXmaappIyTIACqiDhrpTn3jMdiMhz/Z6SWTBEju4PB
      YKMjd57nWK1WEuRyTSHm+rDL911049YBO42jD3ANdMOsNxOLp701TUdGwlpba8VdliWMzZFl
      JVpYopxfYNn6HGVZyoC2hwYj2U8+CxBPAhkSCEDaSLqLo91uS2WclCT+tIT3vFqQXFTz+Ry+
      70sGKotVTk5OxHfijsmBgtxF2KGNPTxZ7MIaZDcb97ZI0xSv50t8eVKP/B8FYAe0NrIACifl
      PQgCmYrOG8y23O2r3KElEpTJ86odydWO4ZoXDwnf90X7E9v6njKIyIU5nU5hz0PAVi1PLi8v
      pQ+rLk/VPhFrt4fDoeyWZVmi1+tJtq1OWMTbFPa8asar677fF0EQ4Fl7cyc5CsAWWFtNF8my
      rLpB1uKz/vpmcIgDE8JI+wHVwiG7Mp5MrkyfstaR4q4020OAxS/jrEBc5hi9G0lrQ7cOYNuC
      pXIYWw+x71dFOp4HGyeIPbOu6jqNkLSSO1cSuka69t3u7BMeEVzmpgl0+qbTKcbjcW30KbCu
      QT09PZUxTIy0ep4nnQ/Oz89rc275/HWffwjI8xzvhjMJhLXDAEmc4OzsDHEc4/vy+1qxPdBc
      U8y06iiK8KLXFkf3VVbgH/xwWc+t6ncedIf8JAUAQK0XpgtqdmuHaLdX0m9I05907JjT3pQZ
      qZ07yYvxfUwmE4zHY0wmkw3BOjT4/rr1YWiAy5dLmbDzt/p/S0wYfme/XCFZ/AhgHQVmrIS7
      H02ez0Mf/9VX5yI0Wkk8FD5JAdBMRxMkShicAzjBYrHA6ekpgKqYfDQayev0bzfbsOlGUvAY
      LZ3NZiIIDL4dikAEQYCTK40tOVKtBYbDoaSUM62CKcteOkEw+evad0+Nh9+ZyvHudruIokgK
      VBgl5q7y0L7R0QfYAmYNMiedGooUoK4zbUqzBXZ3qtZg6J9gQ+APXVOgQT+HfVMprHqn8zwP
      eesp8tbTmnLwJkN81WpLQJHXkmZmp9PZe7g4Kde7opM/yR3gOnBB6u7EvNGsstK5LNt8itvc
      IN7gyWQiheqHAKZLRFGEd+/eYTweb1wDoD7nmeg/+wzdQcU8lUWJ6buKWmWEt2n21zbkeY7f
      jb+9s13yKAANCK5So3VOv97yWV/smjtNacE3FQK+nn14ZrPZwZhExlQjSFutloywIkumfR03
      oVA3xs1WJX7zT9/JczqSvA+CIMBXg2/uLDXicPbYA4LnVfNwaesDzebMdanTt92itSBRo37o
      dAqi0+nUOmlz6gpTjN228vybVWLGpPjT/2Td4pyR4X2FgDlDd4XjDrAFTH7Tmo0zr7ZNjyd0
      WH8fylXDvbkfKnViG9wFSF+l3+9v7IrAussExzHp63cIOArAFrCETi/idruN1WqF4XAoVWHj
      8RjD4bC2QzTN2Hr16hUuLi6qxwHgahF4nieFIm4nBfbfOSQBAOrjiZj2YG01LEO3pQEq84cj
      k5IkwWg0qqWQs76gaUD5Q+BoAu2AMUZyVpjnQ66aRST9fl9uoK6Y0rDW4uLiQppPtf/Hf4j0
      L/8S0X/zX2OqClPcIhNdMnhIYIt6gufs+z4WiwXevn0rDan43YA1/WxM1bSX3zMIAkmNyIc/
      Ij7/2TEQdijQ3PRyPMJidCndC+j8sUsasyfdm0ceXdqNzGaw8zlm43VWpjurjLMMDg1MCSfm
      mMKatTZnO8leryd5P5eXl5JT5fsGYehJLUKv16vtfDar11Hc9+5wTIfeA7q1OLCmKtl7no8B
      VfyAyWGu/yBtF7MMNstglI/hphAc6lziLMuk4zQAWFPCwIOBkXJGzuACILn9nAW2Ws3Q6cTI
      8yrTs3y5gPks2ejcB0BSUVqt1s4WiO+D4w6wB1g9RNDO12nN3M5ps7vOMSO8ZVnC+j7s1SJh
      /rzrLB/i4gdQ68tpjIEHHwYN5/pT5QvQdGQ79k5ngNmskC7c5rPNDE1m4bIi7D53gKMA7AHS
      outGUOt+OdZaBOkQXpnKc3EcYz6fb0yZ0dqecNMp+HmHCj0hksILrBc6F7b3eaWx2QmatQW8
      JnpR6wk+JBZYuA/gTgpituHwjMwDBVmhOI4xmUzw7t07nJ6ewvd95GEfMAa2tFJfGwQBJpOJ
      JHfpxe9Spu5jh2j7Eyxy16WhTIlg9JwOLlsYsskW5/9yWAWf01Qvo/A6kHiXvL+Lw73SBwpj
      qqLqk5MqSU5oSrs2jbhI9I3bFgtwo8dcGIcKTlgntPDO53PJl+JPFEUwFvByizL0hCLmQDt3
      t+M1s0hhsD1KvG+e1XU43L32gMHqrziOxdnljeCwCLZW1zdom2mjhYO8+qFCt5qkc6//Zn9V
      zg5eLpdVR1HPCAngeR56vd7W62GMwWr5nbBnTbTyt+++xfeX37/39zkKwC1BdoNRzjzPsVgs
      aslzzJsntJbXTq9uVvshyyX3AU1BoLLXX79+LTn/Om2DhEBZllilK+TGyo6pfQcXbMkYRb8v
      Q7NdFEWBr06+wuf9z9/7+xwF4BYoyxJ5aeEFAcbjMTzPk47TwpJYIAzCGoWqF4jrB3A65SEP
      3SDCMJQi+mfPngGonGMK70XxpsaCMdKte39uy3KlP8FdtkkZsGD+Lnylow9wC1hrkVsL41dc
      tjsobjabIfQjRFGMpFWF/+kcu74AUwQOmflx4Qqwa4+fmHNJcaCjC1QxkianXyMMQwm03bYV
      +k3weK76AcFai8gA2WJeC9AYY8QvgGexWK5HuTJHRmtGTq9/TIufcOMibGuSpqm0RAyCYIMF
      YzrJNj8niiLxJR6iccBxB7gFaL+yGLwpEY5T6gFIo1eNm0yvP0S47AzbHjIVoiiK2mwxAPCL
      JZLkyU5ePwxDKT99CDzeO/ABwXpeXegB1IfyccFzDJCrzQ6lyOW2oH2umZ1utyuCoVOjPc+D
      gUWYvH9357vGYZ3NI0GWZbVJKIQWBDaf1S1S9OsOmercB8ZUU2RGo6rhrp4fAKwFnNeqtACS
      04P73scd4IZgCkCTc6Z74Vu7Hsqnc4boDD8GtmcXKABPnz6tMTrawc3zHNO3GbpnUWO12CHg
      uAPcEJxWqO133nTdLZoZo57nSfakMdUcgvvMbXlo6MxPAPAsYPJSUhg65wGipGKCDs38AY4C
      cGPoqeVkN3hj2dsHWEdG2+022u2qJQgbvx7iQrgt3EitP80QXFQ0Jie1x3F8sEL/8dyJBwKz
      Pd2Obp3/+/+Cv1xs5PZ8O/0WpVfKznBoJsBdQEe3836E7Nna5GM37EP93kcf4IagveumNC/+
      6Bcor5geLv52u41vUE1wbPVaG6N/PgbQF5jNZht5QpwRdqiLHzgKwI2RpmmtYRaRRxE8YwCV
      C8OkL2aGHvJCeB/QzHmM3+9oAt0AjHQyygnUpxwSukvatnnCHxMes2l33AFugNVqVYsCb4Ob
      6HbE4eIoADcEzRtgs7pLP842J4853eFTwPHu3ACsedWOngZ5/m3PH3F4OPoANwDtf6Y1Myqs
      QXv/uPgfB447wJ5wc95p/ugBb8eF//hw3AFuAHZAaKI0V6vVUQAeIY4CcAPQoW1q1PTYqrqO
      qHC8YzcAC90Xi3r/Svb8PGr/x4ejD3ADSDs/sx6ZpGtej3h8OArAHrC2GozHPj/MbOTfR67/
      8eJoAu0J9u6XyfFXYMnjEY8TRwHYE6zxdft8fqjJJkfcDY4CsCeq3varDQqUE2OOODxkWSZ+
      2zYcBWBPMLPTLW5/rGnAnwKMMdJpbhuOArAHuNA9z6tRoIPB4AOe1RHXYZ/mWkcB2BNBEEiH
      N7cZlossyz7o5MMj9seRv9sTDIIlSSK7QBAEjbsAG0UdI8OHj6MA7Am2O4yiCO12W7rDNcH3
      /XudanLE3eGoom4I3Q6F86/uA2VZymC9I+4PRwG4AfR8YNYCTCYTmZd1l+DQiaMA3C+OJtAN
      wRlhHIS3bYzPXXzOQ7QH/9RxFIBbgj1wdg17eF8c4wv3j6MJ9J44LtLHjaMAHPFJ4ygAR3zS
      OArAEZ80jgJwxCeNowAc8UnjKABHfNI4CsARnzSOAnBP2JUsd8Th4BgJvgewexwHaQPHgNmh
      4igA9wDf91GWJRaLhQjCoc3HPaLCUQDuEOwUvVqtsFwuEYbhsWb4wHEUFayRsgAAAcJJREFU
      gDtCnudYLpdSiN1ut49FMY8ARwG4Q5RlCWstut3ucfE/EhxZoDsA+89kWXawE9EfO9iIQDck
      uAscd4A7QJ7n4vDmeX6sCb5jFEWBxWIhMxiCIEC3270TRXMUgPdAmqbwPE96g9L0OTq9dwO2
      nuRsZj6WZRkWi8WdTKA/CsAtYa3FYrGAMQZlWaLX6x0X/x0iz3NpRNbUXynLMkwmE7Tb7Y1p
      9De5B0cBuCWstYiiCFmWIQiCI89/R7DWCo2smw9wHoO1Fp7nSavKyWQCa60EHTmshEKxyxy1
      1h4F4LbwPA+tVgvWWqRpKjfpuAPcDryO8/lcnFyyasBaq2u7X89l5uwGmkzENkbOWovpdHpk
      gW4Ka22t43BRFCjLErPZ7N56BH1MWCwWG9epKApMp1PMZrMNhkcrFXdIOX/raZ37KqE8zysf
      7r2/0SeG1WqF8XiMLMtqW/NqtbrXRlkfA6y1WC6XG32UlsvltYmD2hTS0LtEE0XqMkVUYPP5
      HMDRB9gLvPgckwpAor7ceo0xWC6XCILgkxmZRMp3X7OPNvlqtYLneQiCQPKmdmEb78/jaTNJ
      nwv9AR6DnzMej+U9/xryOgKhc46MtAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='PopulationAge' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='World GDP/Population Show' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='WorldData' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='WorldGDPDashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9d3wc13mo/cz23oBF740gQIK9iE2iKKtY1aq25aq4O3aSayex48+JfBPf
      FOd+sR3LRZYTy5ItyU29UyIpUiLBCjaA6L0vdrG9zc7cP5ZYAkSnKJEO9/n9KAGDmZ0zO+c9
      5z3veYsgy7JMmjRXKIpL3YA0aS4laQFIc0WjfPDBBx8E8Az38cprr2O22dn5yiv4RSVx7wBv
      7D2AM7cQo05ziZua5mIy1/u2W0288sqriEo9OZn2KdeN9nXwys495JeUo1Mrp/ytqekMKpUS
      vV7/fj7Ku0KYWAM8/qtfsvmqtYx6vLR2BbDKg0QFFQazg7DGyZ071l3qtqa5iMz1vse9PtwR
      AUU8zLJSJ31jEQozjQyE1URcPdx9150EgwFeeXUnK+qWcfhEE8UlxbjdfvqaD3H1rffSf/oo
      OUuvYt3yskv9qHOSUoFUJPAEfLS3dOMeHWTYG8OgBmN2JbdtX3sp25jmPWDO933tWhCUfOTD
      97J39066urvp6xth+wd2IMgiTWcaObh/P8ePH+NMczumjFy6uvtBDJGdV4g26mH/0eOcON18
      qR9zXlIzgBgL09beTXFpMV3tneQUFiPEAuht2WhVl7qZaS42c71vtRTGFYiT5bDgdY8w6A6S
      ZTFgysxGjvjp6O4nPy+HUdcYweFOWr1arr96PeGAD71awB9JEAz4MVut5GQ5L/WjzomQNoOm
      uZJJje1+vx+FIm0U+p+O0WgE0u97gpQAKBSK1JeT5n8mwWAw9XP6fSdJDwFprmjSApDmiiYt
      AGmuaNICkOaKJi0Aaa5o0gKQ5oomLQBprmjSApDmiiYtAGmuaNICkOaKJi0Aaa5o0gKQ5oom
      LQBprmjSApDmiiYtAGmuaNICkOaKJi0Aaa5o0gKQ5oomLQBprmjSApDmiiYtAGmuaNICkOaK
      Ji0Aaa5o0gKQ5oomLQBprmjSApDmiiYtAGmuaNICkOaKJi0Aaa5o0gKQ5oomLQBprmjSxY8u
      Y6JiAncghlatxG5QIwjCpW7S/zjSAvAuSEgyP9ndxh+O9hOOJbi6ysk3bqrGbrzwkrIxUeKp
      Qz38/mg/J/vGkc4WsHIYNVxbncVntpZSnWO5SE+QJlUjLBgMpiuGLJIHnzvNL9/pmnKsNs/C
      s1/ejEq5eO2yecjPl359hPbR4KznKAT40jUV/K/rq1AsckaY/I7T7ztJeg1wFlmWefHEIL8+
      0E0wKs57vi8c57ED3dOOnx7wsadldNH3bx7yc+/P9s/Z+QEkGX60q42/++NJ0vUN3z1pFegs
      P93Twb++cgaA1xqHefSB9VP+3jYSoHnIxw21OfijIu0jARLSzB1w0Bs5+/8w33ulmbfbXejV
      Sm6uy+OrOyrQqqZWWI+JEl/69RG84fiC2/vkoV7WlTq4a3XBYh4zzXmkBeAsR7s9U35u6B1n
      f/sYZU4jG8syuOOhtwlERb5wdRkvnxxClGQsOhW+yPTZYlmehfFQjLt+sp+B8XDq+EO72jgz
      6OORT66dsqB96lDPvCP/TPzbK2e4bUUe6gtQt9IkueIEQJZlXjo5xHgoxm0r83infYwNpQ7u
      XVfIruYRRElGr1Fyx0Nvp665bmlW6ueT/V5MOhVV2WY2ljn4xh9OMnkeuHtNASuL7PzozdYp
      nX+CN86McKTbw9oSR+rY74/2X9CzDPui7GtzsX1J1vwnp5mR/1ECIMky//e1Zn59oAeA+zcW
      8bXrl0xZLE5Wdf54rJ8j3R6urnIyMB5GpRT4yo5KnqjvmfK5O5tGeOSTa/nRm20c7fYQjkuc
      HvBxsNPNF68pxxOK4Ysk1SJvOM5Pd7dzst87azvPDPlTAhAVE5zsG5/y99IsC0VmJXvaz81K
      doMaT2i6inSky5MWgHfBn5wAuAJR/BGRArt+2tT/+IFuHtrVnvr9oV3tZFt0fOKqktSxyapO
      OJbg41cVc7DTTetIIPkZ+7uJiIlp932uYYCG3qkdtX88zMNvdfDk5zby7PEBXhzyc2bIz+uN
      w6gUs1tociy61M/uQIzzlxKCAFadmvs3lhBLyFxTZOCZ7ijXFej4yauNdE2aWEb90Vnvk2Z+
      /mQEoHnIz7eeOcnhrmQHNutUfG5bGV++pgLF2c72ZtPItOvebBqhOsfC08f6CMcSaFQKlAqB
      hCQzGojiDsbQq88tSm0GNZsrcqeYN8syjbzeODxju0RJ5j9eb6FpyD/luEIArUpBVJSmHC/L
      NLKtypn6XaueuiAGUCkF3KEYdpuJpqFx4uEQ3W6R34+C/zzZ1KrT+v+74U9iH6DXHeKW/9w3
      o5Xkgc0l/P2ttQD89e+O87sjfVP+7jBq8ARjU/T0bZWZ1BXY+NGuttSxa6qceMNxhnyRlIBU
      ZZspcxrZWunkgV8emrV9erWS0kwjjYO+1LGaXAvfvKmab/zxJP1n1wLlTiNV2WY6XUGiosSK
      QhtfuqacDz98AHcwdiFfDf/79topM9xcpPcBpvMnMXz84I3WWU2Ev3ynix53CIDra7PRTRoR
      jVol7vM6P8BbrS5eaxyacuzmulwMWiWD3gh9njCD3gh/fm0F/3BrLXlWHXOhVSv4zm212Azq
      1LFAVORXB7r51s1L2fX1a3jmS5uJxCVePjXEmSE/na4gzxzr59b/3IdJe2ETsQBp/f9d8ieh
      Ah3oGJv1b5IMBzvdNA36+PxjR8i2aPnGjeUALMkx85Gf1894nVl3rrNqlArWljimzAgAfZ4w
      60qgKttMvk2fGsnPZ/uSLNaVOtj/jR283ebiS785So87RI87xOuNw/z0Y6t5+tjAjNdHRYle
      TwgBpgnqfHxweS6FDsMir7p88Pv9tHY1EpcjFGRUkJubi0Lx/o7JfxICMB/PNfSj1yR1aZ1a
      ybJ8K2tLHPjC8ZQ6cz5fuqac+g43B7vcfO36Kkozjdy/oZj/81ITAE6zllyrjmFfhGyLju9+
      aBmfefQw4nmf5TRr+foNS/jmH09wuMvD0lwLsfP0/scP9MwpxLIMq4psHOsZn/Wc88kwavj2
      LTULPv/9QJZlYrEYsiyjUChQq6c78MmyTH9/PyNjA3QNN6EtdeMfjXG8/S1WFOxg/dqr3len
      P+WDDz74IEA8HkejuXAnrveSxkHfFP16MgoBbliWQ+twAIUg4AnF+d2RPv54tJ+usSB6tXLa
      yJth1DAwHubphn6GvBFeOjnIWCDG7SvzOdnvZW2xnaZBH08d6uWRvZ20jQSoybPw8qkhnGYt
      CUnGpFOhVyuJihLdY0GePjaAOxhjwBueJgC5Vh29nplnjwn++volOIwaTg3M/Jznt/+XD6yn
      3Gma99zJTH7HF/t9i6LI6/uf5Z3eZ2jsPsKpgbfp6+/FoLJiMVtT50mSxP6jezjR+TYKcwRX
      TxCdSY01V8OIux+9YMdhy3zfhOCyWgTLMjT0enijaYROV3JntDTTSFWOmW8/c2rGdcCaYjsj
      vsisHUwA1CoF2RYtcVGmNt/CgY4xgtHpps5MkwadWsmQNzJtpK/NszDkjbA830q2Vcc9awr4
      898cY8iXdHtYX2LnYJeHO1bm8eaZkdQOsVGj5Def3cj9j9QTmMPH6OkvbWJloY0/Huvn3145
      w7BvZvNmVbaJRx9YT65VP+tnzcZ7sQiWZZme/k5OnDmCP6MFtX6qCiMOG7lz4+fxeNxEY1FG
      fD0oRC0nXTsx2tSYM84JoZQAlSuP69bf/b6pQpeNCjTkjfC13zXwdtvMqkK2RYtVb0gteM06
      FRtKHexrcxGJSzNeA0m9OiZK1OXb+NFHV/Hg840Eo9PNpQCuQIyrq5z0zSBMLn+Ua5dm8bvD
      SSvT00f72VDmYMgXQaNUpMygzzQMIJAUzNpcCzlWHXUFVj66voiH93bMeN8VBVYK7Aaeaein
      ZcjPpvJMjvZ4GPFHKbTrWV+aQVW2iYf3dNAyHOCx/d38zY3Vsz7z+0UikeDgib20h+tRZIqo
      dclOOzF6J0QJrWDi+V1PEtEPYPCXETZ1IftN5Cw7K3wydB4MoVUYIaalsiqDcDhMc9dJSvOX
      YLfZL1p7ZVlmeHgIpzMLhUKBIAiXhwD0ukPc/dN3Zh31ILntn23R8uyXN2PRq8k0afjgD/bO
      2fkn8+LJQTbVZ/DmmZk7/wSHutyz/u2d9nPCGUtI3LYij/99+zI+9kj9FDVLBo6f3TT71YFu
      njzUw6OfXk/7aIA3zru/Xq1EEAQ2/vMbM65VWoYDhGIJanItxBPJZ20a9PH00X6uqXZiNyRH
      0Gg8wbA/is2gxjJpgf9eMjo6QpvnCLo8ickGRVmWiQUk/M16tq/bxMH+P2LO0KBw9mFMKNEW
      xkjOzSAjk1OjQakUGesJ0T3ayMCeLsxVPtxt/exYc+dFUYdkWWZ8fJzGptPUKhTodTosFuul
      V4HEhMRtD71N4wJ0X4CaPAvPfXkzTxzs4dvPnl7UvbLMWqKiNKfX5eqipP4fjk9VkVYV2QhG
      RVqGkzvGGqWCV/9qGwJwzb/vnvGzvnh1Of6oSPdYkDybnrtXF+CPirzVMkpUlGgd9tPQOz5N
      3ZoNh1HDpvIMmof8tI4E2FDq4JFPruW7LzbxTEM/kbiEQoDNFZn8w621VGRNXSNcTBWov7+P
      lxoeI99aTjAzufs+3hfDVpAUyMCISGaiihFPD3krVQvuxF3HvBQut+DtF7mh7tNkODIvuI1w
      dtE90I933EPTmSaysrIIBkMYTCq2bf7Apd8HeO74wII7P0DjgI/fHu7jxZODi77XiD+aGkVn
      Y2tlJj/52GoyTed0041lDpbmWLAZNOjVSoozDNy0PIcn6ntwBWaftXo9IX5T383eVhdPHerl
      vof3IyYkHrytlnKnkcPdngV3fgB3MEZD73hqpgjHE3z44QM8eag3NRNKMuxtdXHnj9+m7ax7
      x8VGkiT6xjqwlMiMj3uJnM4keMqKSnFu5snSliFpfeTWLbzzx6MJcquMtB/wUm6+Coc9Y95r
      RFEkGAwSDodJJBJIkjQlTsLn8/KHPz7FiGuIwsIiOjrbsWUYqFu29vJQgZ4/PrDoa/5wtI/W
      4amuByuqcykUowxEExTlZ5IR9nLAIxPweOn2n1t8riqyzbrO0KuV3LeukDybnv3f3JH0+Zdl
      PvvoYQ50nFON/BGRW+ry+MoTR3lkXwcqpYCYmNqRHQYNJ/u8U/x8JBl++GYrOrWS777YtOjn
      huTeRGW2iQ+tyifTpOHneztnPM8XEfnO86d57M82XNB95uLtA3sJJMaQbTKKklFGj8fQ2GQy
      83QgQ8id4KqSq+noamXUfxijbWEqmVqrBC0IopaaqhVzCk40GkUURRKJROrfhOl1Mlarjfvu
      uZ9AIIDNZsOgN1BTU4tSmTSbX/IZoGnQP/9J59E/Hp5x5Cy2acl22ii1qLEb1VxTnUtN1lRr
      ydVVTv5iR+W0a/VqJQ/dv5o8W/J8tVJBda6FF08MMnA2wGUCdzDGt585RSQuIcmwuTyTLRXn
      puoMo4aff3IN0Rlmm2FflL97+uSiN70m0zocQBDg1dMz+ydN8HabC39k4UE2cyHLMj19Xew/
      +hZbrtrGior1BDt1CAIYbVp0lmSH6ngryA2VD2A0GokJPgzWxY+xdXUrMJnmNvGKokgkEkEU
      RTQaDRaLBY1GgyAI0wQnJyeHiooKMjMzWb68LtX54TKwAkXi082RC7km26JLmUoBjp8Z5PjZ
      n19OHZ2uJmVbdNy+Mp/tS5z8/bOnaRsNkGfT81fXVU3pxBPMpkaUZBooyTTQNOhDo1IQiIhk
      GDWIkozdqKG+w82aYjsvnpjahmBUZPR8j7YL4GCne9aItAkkGTyh+JRd7wuhu6eTEe8AVUXL
      eOnI44yMDWK323E6MxlzdxPxKdHISnBCVrmRSDTMge6n0eXGEVjcAjbkjbMsZ/m856lUKlQq
      VUrdmfh5sQvmSz4D5MzjZzPjNRYdG8sc8594HoIAa4vtPLa/i688cYwT/V5CsQRtIwG+/Juj
      rP2n1/nui01TFsnnLyQnqCuwsa7EQSiW4PXGYfZ3jDEWjOENx2kbCfBvrzazs3EYjfLcC9la
      mTnr5y2WPk94zn0FAJ1aQbZZe8H3kGWZaDRKfcPb+Lx+VCoVa/KvR6vR0nTmNMtztrIu4w7k
      oBa1TUSMSpRY6whFfcTlEIkFWugmE/SIuD3ueTuyRqNJjeQajYZIJDLj6D8fl3wG2FyRyZmh
      xalBmysyuXNVPk8e7F2UKrGuxMH/+u1x6jtnNnX6IiI/39vBCycGeOSTa6nNs/LA5lKeOdY/
      RQ3KMms52u3h8KTYgpmYcIX+7NZS/mxLGVkWLbV//+oiWjw3hXbDrDvkAHeszJ/R3XohyLJM
      w5l6+od72Lh2M3qtkYGBfpYvq0OrXcfpxpMISvB5/ahzgySi4OlTcPdd1yNJEg1nDuKL+LEX
      Lm6MzSzS0XDyLZbX1s3ZmQVBQK1Wo1AoUKlUKJXKRXV+WZZxu92XXgA+trGYR9/pWrA1RKUQ
      +NjGYkozjXxyU8m0tCSzoVMp6BgN4ArM73Y86I1w/8/refrLm3n4rXZiCYktFZmE4wliosSy
      fAtPHOxd0H0BHtnbybYqJ0qFMM28Opnb6vKw6FV0eaNkqwSavFHGRscZjsz83awqsrE838pT
      h6e3ZVmehW/dvHTBbTyfzp42jnbtQRt1IMYSHGp5m02rtvPaG68QkjzYHTZ629pIBNRkleai
      UenxiB4SiQRarRaLxklQPc5YTwJ7vgaFcmGdc6QjwvKSDyzo3AlXjsWM/LIs09XVSd9wG5IQ
      vvS+QHaDBp1awd5W14LOr8wy8+v6Hn7wRitV2WZyrbp5A8rNOhW1eRbaRhYeeB4RJfa2jLK3
      1UUolqAiy0Shw0DriJ+Dne5pUVzzcbLfy60rcvmvt7tmPWdJtglZoWb7shzw+XDYTRzqHGc2
      RWJprpl/vauO0kwj3kgcSZJJyDJlmSY+f3U5xRkGdJNmgMX4AqlUGiJj4KabntBxopEobT1n
      sOoz8WhbyRDKMBusCKYIheZagnEPq8uuJisjB0EQKCksI9e4lA3VH6Cv2YNocrOQPqrWCsgh
      LaUFVfN26sWqPLIsc+jYXkZCjZj1GdRWbLz0AgDJzSdBYIqpcSaurc7icLeHQFQkJkqc6PNy
      z5pCblqWw6l+L8HY1NFVEGBDqYMffmQVD+1qX5TNHZILyKpsE2adCptBQ5cryC11eVN2hBeK
      Oxhja6WTZxtmN/s2DwdoHBhn58lB6geCROMJRuaYsbZUZLK1ykl1roW1JXbeahmlzxNmLBjj
      ldND/PKdLlRKBWuK7QiCsGABmFAPKsorMapsNB3uJK8gj8q85SytWIZZkY1IFI/HjWQMMhBp
      IiqHMMoZ5GcXA6BUqjAajQiCQH52CU3tDaiN868JEqKM2ptHWUn5gjr3xCJ4Iec2Np5myH+K
      kox1LF+6Bq1We+lVIEg2/oHNpbx4YhCLXs3xSbujKoXAVeUZLMk2o1IK01wZ9neMkWfTYdSq
      +OaWUnRqJeFYAn80zuaKTD7xi4P8bE/HnKrHXCzLt3Jm0M+u5hHuXlNA/XlCmusw4lDD6eGp
      s0txpoFeV2jK6H2ib5xih4Hus/5M8zHf2qg6xwwkhesjDx9I5SOaIBKX+JeXkwkAvnB1+YLu
      CUkfn+caHsZo0VNkWMHnPv5VtFotnd0dGI0mRtwD6BRmlNYYawpuoXegi6yMXERRJBqNotVO
      XXhrNBpsygKizLxnMUHQE2OsK86GyqwFj+yLmQGGPZ2o41lUVSZVQ1mWLw8BgKRpU6NS8Dc3
      LKEq24wrEKXDFeRfXz5DhlHDI/s6KZoh+EOvUab08Y7RIF+/YQkf/0U9Z4b8/GxPB5srMjHr
      Jz2mQskHa5z0jvqJSCCrVHi8IQpsOtxRiXyLjkgsRkN/svPtbh5NhSvua3WhVU1d1G0uz8Cq
      lCnJseILy9jUIqCkuMDEf7/axmSxGPBG2F6dteB1y1woFQJbz8YW/3xvx7TOP5nv72zhw+sK
      Wagx1OPxYMhQoFCJnOyox+sK4DBmc7B1Jx9Y/yG6I0fRjuch2d00d5+gbfgEdq2Au0mge2AZ
      N11727TPdBpL6El0zLoWkGWZvqNxbr72HgrzixbY0oUjyzIDgwPcfuNHU8d6ersvvRm03xPm
      L59qYNv3dnF6wMd9Dx/gqn95g4d2txOMinSOBckwablnbQHXLHHimJR4tibXwj/dsYyPrC8k
      36ZnfamDn+xuS42coiTzdpuLEd+5zqHQaiESJiCr+PD6fJbl2LhlTQEfqnWyqtDOkgIb9yw/
      F2aoVSlYXWQjy6zla9dXoTrvBY4FYowFY3j8ERwmNQ6bEX8wii8U4/w5R6UQuH9D0SIt4zNz
      07IcMk3JkXZ389wOfpG4NKvlayYCYR8qjZJQu5GMKiXhgmaawm+itiTIsGdhNtgIx4KsyNpB
      XO0jkUig1AqorCIjuuO0trZMS9sYiUTxDc0+C8cjEpZCmUFXN1rtOdP4xUr/2NHZTkamDbPZ
      nPrcEXf3pZ0BjvWM8+lfHmT8vHw3kbjEM8f62d08wn99ah1ri+3c9qO3UxtfFp2Kn39iLWtL
      HCgVAv98Zx03/eAtvva749gNU8c5UZKJTdqRlcIhmvwWvL4Qvz3cjysgolQpyDUqcUdl4nGJ
      BrMKJZA4e/3xPi/3ri3gnrWFvHp6aMqie1fT5NjiSZ2sa7qJtDTTSGW2mfvWFfLkoYVbkc5H
      q1Lw9euXpH4PzJCd7nzm2zOYTGFeMWLsLrJvzOXR53+IpVDAmq/GkqemZ7CD66rvZ7/8Kj2B
      05gT+egz20AWsBUlN6PeaP01A6Pb2Lpxe8qvf0lFNYd+ux+dNY7ONL3bRQIirmbwGQ+wZd11
      i7LqhEIhdr65E693nG3btlFSVDrtvPy8Ao6efIuOjnbKysqJx+P4xf5LJwDecJzP/erwtM4/
      mfFQnL/53Qk+f3XZlF1fX0Sk2x1iQ9l0ZymrfmoCqeocM7evzOetlnNWps7hpO3cPanjjEzK
      YzU0ybS+pSITSZZRKRT0uUPY9BduKLj6rMry/91Sw5FuTyoX0WL5x9uXUZJ5zpOzMts8b8RZ
      5SI24J7d9RuMaisKlUBuRiHeRDegJhGVaeh7E4fZiRiGkcAAm7Z+kMTpOM1NR7ALRZDrwlYA
      Hb63Ke4po6Qk2RnD4TARyUtoXD2jABisarJqEhQb1k3p/HMJgizLHDt2jJfefJ54pg+tQsmL
      r7m55qoPsHRpDQqFAlmWCUfCIMPdt32a1rZm3nzrZZZULCMeTVw6AfjvtzsZncOTcoLRQJRf
      7Z+ehfl7rzbzm/oePrQqnx53iEyTlgJ70jpU6DAw6o9wfU0O376lBo1KgV6tvKCFcDAqkm/X
      89j+bqKixIn+cRxGzaLTmFxd5aQy24zLH+WdjjHuWVvIw2+1L2hfYgIB+NbNS7l3XeGU4x/b
      WDxnnMOKAivL862EQgtbfCcK+vDRxyHvaaJoyRArkAdEuhv72LBhE5FYiHAkREId4fGXfkxN
      wVqURpGtdddyuKEen9yMxgAxMZpyT3A6s1hVtQWX4fC0+/lGowgxHbW5W1hbu23B38eePXt4
      cdczGHMUaAQlNqeWdVVF+OKN7G/oYcWSbbR3NGM2WRkY6iUSCSMSwpgh0uV5h2joEu4Ev3p6
      aP6TJlGaaUzNAiqFgNOk5Xjv+LRsbZN58eQgoZjIl7dX8OnNJfx4d/us585EbZ4FXyROwi2z
      JMfM3tZRcq06Vhba+O3hvvk/4CwmrYrv3FbLbw/38vfPnCJydodYISRnLF84Pu+OdqZJw/0b
      irHq1fzsrXaicQmDRkm2RUe508Tnt5Xxs7emR5zlWnX84COrFmUtEQQBWYJ4SEKTG8Xn7keK
      gW1pnE7xAIkRmRgijhItYo5Ez0gDaqOAw+HAYNFAtJhYRjf17t8z6t3M5jXbAWjqOUr+mvN2
      pmUoVK9j3eptqFSL646yKkF2jY6cWiPe3ii2fC1D/W4ys6zY8hKcaNlL2CfR09dFQY0Cm0aJ
      IGiB5NrJZLmEZtCesYWNRgBjgSj1f3cdvz/Sy/d3tjIejs/pAjBBQpLZ2TTCzqYRbl+ZR0WW
      acE+8ja9mjXFdl49PcSIL5rqoIPeCMd6xllZaON47/i8HVelELihNpsRf5Rv/OHENPdofyTO
      f9y3kobecXadGZliItUoFcQlCYGkOviDN1pnvY9Fp8Jh1BATJewGNSadimuWZPHZrWVTDAcL
      QYzKDB2RyLYUIhb1YsqXSSQSyJIaQZHcfJLlZEeO+EW8Qwk2130ArVbLmtpNPHfsYYwk44GH
      M1pJJLahUChwZtvQ6M99/+7eCMZ4AWu3bUGlUiGKIv/16CNkF2YyHhvmjm33Y7XYZm6jKLL7
      8Gs4l6hJxGQI6hAUyQiz4c4o2sJ8PO5elNo4xXUWlDNk0I7HL6EKpNcop21czXWuLxLn1/U9
      jC8ih/5knm0YwGnWUugw0DuPHT7XquORT67lr55qwBcWp3VyGRgcD/Ovd9fx411tdM0izEqF
      wIpCG3842s+eFteMu8eSDKcGvDx4Wy0P3lZLKCbiCsR48mAPTx7qTSX2kuaxhkxO055v1/M3
      N1SzvfrCkmaptALWMpmYqhejRYkkSUl9WpCnbDzJsoxSpcSss9DjbaTMXcWzux9H0stEfAmM
      JgNXld2aclorzFhKS/cenMUG4tEE1ZbrWL1y7bnvS6lEq9ficpxGjijwjHtmFABZlnnr4G7U
      jgS2QhPCmJXlxdUMcJh4Ik5WroPOtl6suRK5xTMLEIDeoLl0ZtDJ6cHnoyTDyIcfPnDBi8YJ
      Rv1RJEnmqzsqKbRPz6pg0an47NYyXvnLbfzH6624g7FZ1w3D/ijffbGJL2+v4N/vWUFllgmj
      RkmBXc9Xrq3gc9vKSEgyR7o9/Pn2CtaVzB7cPdkQMOiN8IXHj/Dj3e0XnC6xeScX4TEAACAA
      SURBVMjPp395iK88cfSC4wHMOSqMmUqCLhFJlHF3R1L6/IQQBEcTrHPcyZraq9CFnUQiYbav
      uY0bV95PcDTB8KBrSlB7deUy9Mak+hEeg9KSsin3FASB2266gzrdB7h72Z/PaM2RZZkXXnqe
      XcdfxmzTkvArscTy6ZLrERQQFINo9DIlKzTkFpvnfc5LNgN8bGMxr5xa2DrgVL83pTe/W/rH
      wxzoGGPX16+hcdCXWlcUOgz8YGcrXa4g//e1ZoZ9ESqzzLiDYzOO3AoB/uO+lTz6TteUkkjB
      WJif7emg6uwurUGjJMusJRib3Qy5qjA5Su1pGeVLjx9Z8Mw4H88fH+RUv49fPbD+gjPIRV0q
      EoNGTFXJL2GyENTarmHpkmRyrqJcNz293RwafQ6TysEtKx7AM+6Z4m5htVgp0Kymd+wQNl0h
      dtv0QdBut7POvmnKsba2NsrLy1M/H+jZhaFAhdakIEtZSXZuAUHhDPGIBD4Dve0eMnKM6PTz
      b/1dMl+gIoeBIW9k3kRQerXyonX+CfrHw9iNGm5clkt1joXqHAu5Vj1PHerlzJCP0wM+VEqB
      JTlmCu0G2kanzzxFGQaePz4wo7tCQpYZ8UfJMGnYviSLn+7poGnQR75NPy0gvybPwnduq2VP
      yyif/dXhadmk3y3joTgvnRzkxtoc9CoW5AvU6NoHJDu72iyjz40TD8lICRmVNqk0RHwJ1hRc
      nwqs1+v1WCxWmkYOoMsWGen1km3PJxwJT1Fj8rNLUAYdGNUZZGXmLOgZ7HY7LS0tKBQK4mKc
      UyOHEcMyJpMGr8+DPprFSPc48X4TmZlmckpM2DKM0xb+MznPXdKd4H/60HI+u7WMmVLpKwW4
      f0MRGtV708QfvtFKaNKo/PzxATpdAcZDcbzhOHq1ktMDPjpcASqcU7MnLMuz4A7GZixYMZmx
      QCwV86xWKrhpWQ61eRbKnEbKnEY+s6WUJz+7MRWQs1hnvYUy7Ivyif86uKjNMDjrc69TICgE
      YgEJhVIg6pVBBo1Rwamug1N2aiORCNqz0WdBQy/HXTs52vPmtM+srqphWfWKBbUhLsb5/dO/
      pbnlDHa7nbzcPCqdy6jSriQ8KmEViyguKkIRV6I2hClfbsdi09PdOnOhwon2piLJFvWNXGRU
      CoFv3byUj6wv5LnjAzSdtewszbXw1KFehnyRRRWOWwyeUJyG3nE2lWcST0h879Vmssw6AlER
      pSKZX/Sps7u1a4rtrC7S4ApEMWlVbK1ycmqBJlVJhpWFNgwaJb3uEPeuLeSTm0pSfw9GRb78
      m6MLzm90oXS6gjy2v5uv31x3Qddb8pNdxT0UQ2vVolAKDCiO87u9vVxVcTP5OQXE4zG0cQcS
      Y6jMEhDAM+p9VylYlAol7Z2tFC5NbiJqtVrWlG1gz+GdaIwqcm2FjHmHMNogFlMwPhbElmGk
      dIas2ZOFdUKNuyyc4cqcJv7yuqrU7+F4go7RIC3Diw+YXwzHesapzbPy8V/UpzLOTbC/fYyl
      OeakO69Nz3goRmVWBmtL7DNuzM3FRLmkF7+6ZZpJ8odvtNK9CJPwu+FiqFeOEg2+oRgGuxqt
      SQGmcfYOPY6hpZCS7CVINk9qBxbAlKXiiTce4kNb/owMx/xpTs5nX/1uRClOOOGlb6CXwvwi
      ouE4HWc6qVmyHH2hTPOZRnRWKCrOxusKYXUYp8QeTKg9E20aGfQS9EWSccXv+ht5DxgLRDnV
      752WjeFiU985RutwgBN90+t59bhD3LEqn/vWFvKp/z5IVJSwGdTcvaaAYd/i2rWjOgtJhg/+
      YC+SDBvLMvjx/auJiRL/PUeAzKVCjEmoNLOrngNHo+QuVWMpSf6uNgi4fd2o+81QICFJIEsg
      nP0IQ2GM3Q3Pcef2Ty06ZrdjpIniigJipiEONL9K73AV7zS+wsq7MggN9qPLtrAi20lrwzAG
      gxavO0hvh4ui8qkJDvzeMAaTBoVCgWckQM3KpMfpZSUATYM+HjvQjUWnoiLLRIdr/ggutVpF
      daaOAV+MsXACm1pmPLqwka55yM9YYPbglheOD3C635saOcdDcf7hudPTPELnY3/HGP5JdvoD
      HWN898VGssy6KY56lwuDx2LkrNCkcn2eT1aNmrgUIRHXEg/LaM0KzDlKPP7TaEnm3Iz4RYSY
      llhAIt9RiWskhCRJU1KSLITbt30E15iLd47tIoTEW+0vYytUIyVkpJBAZ8sw+cUZaHUakBTk
      5mUSj4l0t4ySVWDFYNTS3jSEyaTDPeIHGayOc+rYZSMA0XiC+x+pT9m+b12Rt6DrPlDt5FC3
      h5uX5dIfTlBjFmh3RxD1Rga7+jnpnn0NMRaIzbnwFCV5mmo05AuzqsjOwPjCZ4Hz06UD1He6
      pyXTuly4e8en+eljP8S5VAuTEpvIqf8KyAmItIioRSPFxUWErD1ozUmBkWUZb38cKSxz2+aP
      4fKM0GV7mQOH3mHzxq2Laovd7kAQFMQSYYxVQcoNFjrrvai1SoIxkUBnjN62MTLsdmLBEZYs
      K8CRacZs0dPTP0xpVTaSKJFbOPO+0yWPB5jAG4lP2fjpWsDoD9AzHqUu38KIJ4A3KkEiwVAw
      jkOvQj1PRgS1UjFnNUeVQuCWuqmCeEtdHnevWXh1dq1KwX3nOa8BRONSKrX65UZBXhEFK2xk
      lBnIKNPjOPsvo0yfOpZZqcdcoEEwiXSfHGOgPkE8ICAlZLoP+/B7w8QJs+/QbgxaE/du/AuK
      C0suqD02m41NK3eAkBRBUZTwDcYYH4igktUYTTpWbSpFrVdwst7F4XfaOPx2D/nFGciyjMFo
      YqhZzWCfh5ZTA1PUsMtmBsgy6/jI+kKeONiLw6ghY4H+K6d63Zya9PuEr+HRBVRbcRg1rCtx
      8EzDzIWqN1dkEhUTmHUqTFoVFr2a3c3JuNulueYFZbWbcMQ70u3h9Nk9D5tBzdVLnPz+yMId
      6t5P4vE4gibBfN1DrVcgZEkExgMoZTWuziCilMBcpCFHqCJLV0xJURm52clB5EJSnfcOdNE7
      3IbPGyQoxTEGrFQW1hCW3ZRlFDI2OoBChqPvtKNSqrnt1o8yMjKCUiVwqm0fWpOMUZODoFLh
      DkRx2G30tbuRkCgsy7h8ZgCAf76zjoPf2sH+b1xLbb5lSsG794LyLCPfub2WugLrtL/VFVhZ
      WWjjhROD+CMi2yqdtI8E6HGHePPMCMvzrawqmt3PBOCu1fnEExJ3/3Q/3nCcbIuWb95Uze6v
      XzMttPJyIqmnnxslo3NkslOqBfQFIrIpiNYpkFGtRROwsyx/I1et25Lq/BdK/0AvZ0b2Ixd1
      YCaDraX3sLpiK6XmNYQFD4WFVQz2uXGPBulud9Fwaj+dIwcZdfeiU1vobBymubmRgpwyelrH
      CAZDxCIiDpuVEwcvcUQYJO3T9R1juAIxTFoldQU2Mou0aFQKqrLNM1poLhYmrZoXTgwQEyVW
      FtowapVE4xKjgSglGUZO9I2jEKA6xzIthaPNoOGpz13Fo/u7ePSdrilFNVYUWPnC1eX89ztd
      /OHo1Nnlkb2d3Loib85aCLNhMOqxE6M/eHFcJWZDqVSSoSogcja1pNY8uyopKAS0dtDakxtg
      A/URvvLRz2A0LjwARxRFfD4fSqUCq3XqoCIrYyiVArIkU2JdSSKRwGQ0UVFWBZ0Qi8Qpqyxj
      qGecgjIVlsIgkbACrcGN0wnHjoZwOMwIgoLa5VUkhBDOIiudLUOE/PFLJwCdriDffuYU+9qm
      5wMqyzRyw7Kcs53wvROAl04O8tLJQf58ewX7O8bQqZXUd7gRJXmKbb7IYcCiV/Mvd9Xxn2+2
      Eo1L3FqXi0al4LNby7hjZT7fe7WZpkEfH6jJ5gtXl/PCiQEOzhCHOxqI8v2dLVN2oRdKntPC
      pgwFBVYjbpSEQkFKzVqGRC3tPb3sbL84+yaCILCx8jpe73t0Wsmj+cjPKVxU54dkXk+Hw4Eo
      Tv9OqopWMDI6TOBUAkdRjO7hwwwNjJGbXYTTXkz1kqW4PW5eevFF1AktkWE7nV3tSISJx0Sq
      a4rIyrPS4zqEJUODUmXmdEM3TqcNq818aQTgcJebB355aIoL72Q6XEF+uqedv75+CXtb1fO6
      HFwIdoOa62qyefnkENfXZrNjaRZ3/WT/jG7Hr5we4u8+WE1NriW1eL31R2/ziauK+cq1ldz2
      o32prAwn+70c6nLPWcOrvtNN2SIL3AFkaeHEUJAud5y6CjvNgwH6RoP0B2TiiQvzHJ2NovwS
      VozeSH3XqygtCfR2JZIoo5xDLbWECrh6y+2p30VRXFTKwskBMRO7x6FwgMJiC/29I1iyY6hU
      ZuKJMKGID0mOI8sygaCPTZs3UVJcmnTfECwcPfkmRaVZKBRKgoEI+UXnNuHsdjOlFbmMuXzv
      vwAM+yJ87rEjs3b+CWQZvvdaM9dUZbFrnqwHF8JXd1TS6QoSiIo8cbCH8VB8Tp/7n+3p4MUT
      g1MsN7/a383pAd+0lCR7W11UZc/ewfVqJQ7D4jM2v9N8Lh36W50Ly6T3blhdt45w2E9L2xnM
      kgKFUqDXP4ApN9n2yJiMRtBh0lvwREb4QO0N2O3nzI2Lzdc5gSzLGAwG4vE4PUONxBJ+dAY1
      KlVSFSsocdJwpJUck5p9R7pQG0SGBkYZGEs615042oo5U0VY4ceosDA6GMBoNGLLSGab8PtC
      tDX3o1BcggIZ39/ZsmA/d1mGDleAdSV2Ds2QZeFCWV/q4BNXlfCxXySLaB/u8sybpn1sFue3
      Yz0ztyvPpk+VUzqfG2pzUM8QoXS5IUkSK2rXc+ZME9mZOZidAkVxJ8dPtZOlrubm628nGAxg
      MBjZ17CTptZGzGZLKrf/hdb2ikQiDAz009XVSc9AF6s25WMwnUuVolAImCx6lCoF9gIZUKIa
      VZBXnLxvV5uF/KUqTFYt0XAcZTiGFHLQ6+0nM9uA3qShsDSLeDT+/lqBYqLEc3OkBpyJ7rEQ
      n9laNmNSrAuhyGHgoY+uRqkQ+Nsbl3Df2kK+d0/dgrxOc2dI5X7tLFFXCUmesc0bSh188Zry
      eS1IlwMqlQqLxcL1O27BN6QmOJ5ApVayYlk5ZYXJIiMT+n5RRhXFhSX09feRSLy7Rbperycv
      Lx+DUUfd2kJaTw8x1D91oIlHEwT9EUJnEytMnrsrarIQfGed5/QqCirttPQfobfXS1+rhNO8
      BMmfzUDP+6wCdYwGzgV7GE18Y7UVwWjihcZRtAqZaChKZpYNIRQioNAwMOimLyjy87c6KHca
      iYnvbvOoMitZY9d5Nmf+ykI7KwuTtulN5ZlzJtnNteoIxUQsOlVKfVMrBYLRxLRq9DuWZvFm
      0wgysLbETiiWYHm+lQ2lDm5bkZfK12nQKAldpOCX95LiolJysvNo7WhCohOFQkBQJMMjj586
      hF5rZmhoGJ9vHK1OQygYYsWKFWctO0osFsui7ifLMqcaGxAVY2RnWLGMGMmw2+huHSG/JAPP
      WIBMu4Ox3hAGgwbXwBihQJTezqQLdCIhQTSDgEfEZE928ao1DpqPDSGZFaxeeQtKpRK7zfn+
      zgDn+6OrdQaESJhrluZQ5jCwIt/M8iIbGqDcaabybHmjjWUZ/P0tNeRYtey4wDjXe9cW8MyX
      N6dKIJ3PF68pxzaHXq4QBDJNWpbkmMmx6lArBeIJmf0dYyQkmavKMsgya7lzVT7rih2YdCoE
      ktFsTYM+vnFTNXeuLkB1VvXRqZXctGxhASGXA1qtlrLiKgLDWoKBGK5oE3v2v8yBo7tw2DPZ
      snkrWzZfTaYjh9ONp3jjzdd4bdfvOHZ614Kzu0WjkXP++ooQecVJwVEoBAxGHWUVBZw42IXZ
      aKagyElOngOjWUfN0jK0Ch1FpdkUlWZTWpFLAj8OahjsGme4x89wSxQlauqKdqT8kXJzc9/f
      GWAilR8AwQD/+PoMWQ6OnV3odZzbyS2w6yl1msi26GgdDnDz8lx63CEaB31zlglSKgS2L3Hy
      5e0VrCqaexcyz6bnN5/ZwFeeODZlJrDq1XxweQ6/PdTHvesKcPljnBnyEz/Pj6dp0MeyfCsf
      XJ7LdTXZ3L22AH9E5PSAl05XENsM4Xmf2lw6bZ/gcsZgMLBp5QcZHR1leKyHgVgv8bDMvvpX
      KC9eTt3yldjtdlavXg1AY8sREnGZWCw2LWHuTEiSTG9vL/n5+XR1dTM4LGO2GFAqFQz2uxke
      cGOzm9EbNMm6v+4AZZU5xOMiBuNU9XRoaJDAuIA914lGq0att3L1mjXT9hneVwEozjCQY9Et
      Wo2ZyABn0KgIxxOpEqk1uRaqsk1ERQlPKEYgmiDfpqNrLMSQN4JOpWB/h5vdzfsx6VSUZRrZ
      WJbB7SvzWZIzPWC6KtvMN26q5vnjg5i0KpqHfJRkGnniYC9/e2M1D2wpQatS8su3O3nw+cZp
      18cSEi3Dfl44McCJPi93rMrnK9dWzLoYXJ5v5fqabF5rnLvY3eWG0+nE6XSyrHoNa5a72L3v
      VWLxMLIs4/f72V+/D61WzZLKZbhcLvx+H1qtc97P1ev1FBUVJTv3aBxLpnS28qMKUUwQjSbz
      J/X3ukiICTrbhiguy8I3HkSn15BISPi9IVqb+qlbU47XE6TzjJ+qyiVoTQY0mulC+L7GBAuC
      QCQuLSq//paKTP5sSzI7wJtnRqYkeR0NRFEpBArtBkLRBLGExFggRvOwn6goEYwliCeSlRwj
      cYlBb4RDXR4eP9DNyX4vm8ozMWqTY4AnGOPen+3nF/u6aB72c7Lfy/J8K1+7fgneUIyPbyxO
      zWB5dj2/O9I3JYor16rn9ICPsWCMfW1jeEJx9neMcVV5BgX22Rfwq4psPHmod9qM8l6wptDC
      tuqk2nWx3rfBYCAvt4gTpxo43tCAK9DFqKeX7HIF3lg3/lg/Y4MRigpLFpXyfNWq1bR3tDE0
      OEJBcQYed4BQKEpOnp3ismxkGTxuH0F/FJVaxfDgOMFABJVSRTgco6QsB6vdSCweQlYE0Oss
      FOZPzzLxvgfF1xVYOTPkW5Cvf0WWie/ftxKbIdmuf3j2FP7z1hEqhcD37lnBT3a30+kK4lqg
      ibXTFeS100MUOgyUOU387R9OTNuVbh8NsiTbxF/fWJ1qgywn8/FbdGqah3yoFALL8618enMJ
      ZU4jBo1qSqD8h1blz2nBsujV1ORaePX00HsWEwxQkmHga9dVkGVN+sJfzPet0+lYUlXD0uoa
      +lwnKV+ay1DPOLFYjFAohts9QltnC7KoxuFwpBLmzoUgCBQVlBMKBhDFBGqlibzsUszGbPr6
      ehHjMQwmPYXFTrzjIfRGLb7xIHaHiVAwSjwmEouLRCJxZEnF6uVbp9UQBhDks6uOdxO3uVjE
      hMR3nm/ksQOzhxauK3Gcrdh+btr6xH8d5K2WqcHOG0odxBISxxbg/TkTCgEe+uhqvv3sqRnz
      dN5Sl8uPProadzDGr97p4o/H+qfFCEygUSpYW2KndSSAWauaVwWazBtNw3z+sSPviRBkW7T8
      /gubcGjl1Du+GO/7/LKkxxoOE9N2Y3MY6WgZYnTYgzPHihiTCIejWCwWcqw1rFi++oL3CAB8
      Ph+PP/UwJouagC/CjbetT31ec2MvkVCMiuo82lsGKSoqoDh3zaxV5y+JK4RKqeAf71jG7Svz
      eOxAN/Ud7lTAeV2BlbvWFLClIpN/e6WZPS2j6DVK7lqdzzdvqub0gJexsx01w6RBhgvu/JAM
      Wv/a745j0Mzs8JVj0fHzvR18//WWefP1xBLn1LuyTCM31+Uu+EXvWJrNLz617qLmBYJkTtWJ
      vEDB4MJrpC2EQCCAx+OhqKgISZIYC7Tj6fOQiCcI+MOs2TxV+MOhKA31+/BHRigvrkYp6Mhy
      5iy6zpcsS1TU5iIlRPIL1Knr4/EEZ072UllViiRJWMx2yvLXpxa+M9URviQzwHyICYnbH3o7
      5T8/wac2lfDVHZX87R9OUJ1jZkOpg4//4uC7qro+wUzZo1UKgeIMw7xF+GbDoFHyH/eu5IY5
      zJ2yDG0jfk4P+ojEEoTjCR59p2vWdIuL4da6XP7PnctThbInv+OL/b6DwSAv7HycVRtLaDsz
      gCPbiMU29+ZlJBTDO6Rm+6ZbF32/np5ufv/MY1y1rQa9XovVbiQSjtHZNszS5YWMuXyYlVUs
      WVKduiYcDqPXTzWDX3J36JnY0zI6rfMDPHagG0EgWZi6fYzjfd6L0vkhmYnir66r5KWTQ4wG
      olQ4TTQN+i648wOEYgm++Osj/ODDq2YM8TzU5eafXmjk+Hker1qVAqteTUKSF53LB5I1Ef72
      xgvPDXohGI1G6qqvQkr0E4vFEQSBwV4PuYUzm58FQUBn0ODXhi+owntRUTEbt9SRkMN0dLio
      XVZKJBIjGo3R0zVCYbGTyNjU706n00271/siAPGEhCsQxRuOExMlFIKAUaPCYdJg0amnlc+c
      rd5VQpIZ9Se3vmMJiX0LLK26UMaCMQZ9EZblWbAZ1Pi7Ft/5zkeS4Wu/PU5JppHl+ecCb357
      qJdvPn1yxn2MqCgRFSUqs0zct66QXc0jHOx0z2kpspzNBn3X6gK2VmWieBc69oVSWV7D/uNt
      LF1exKG9LZRV5dHdOkpesQP1eSqmLMv4x6NU5m28YIc5pUJNVp4ek1nPrteOkeG0kVvgoKG+
      g4SYQCMkGBvLRRBAFBM4nc73XgAkWeZ0v4+321wc7fHQNOSn3xOata6uWauiItvE8nwr60sd
      bKnIpDZv5q1zi07Fv91dx03LchjxR/nODLb4d8OxnnGW51vodYcvqBTqbMQSEv/rqQZe+out
      qJUKDnW5Z+38k2kdCbC31cXjf7aBSFxKbap5QjEik+sDZJlYkm1GOUd88/uBSqWiOHslQ+6T
      ZGRZyc61k5Vj40h9M8vXF087PxZUkVc9PV56IfT0dKO3JsM2/b4wW66tQ6EUOLTvDEq1gNVm
      Qi1ZiMdjdA2cQC3YyMqaXn3yoglA+2iApw728tyJAYYWkc/HHxU51jPOsZ5xfrW/G6VCYFN5
      BtkW7ZSoKQH49i01GDQqbq7Lm7PSYnammWqrmoNdbsKLWE/2eULUf/E6rvneroVftEBaRwL8
      9lAvH91QzD+90Dhv559gT8sou5tH2V6dxdoSx6Kyal8KigrKsPky+GPDY1QthVg0jsGgT2Vs
      m4xWNX/25tnQanV0nhxCq1PjdQfoaBsgw2Fn6446ThztRK8opLq6jhOnD2BxgEWVhyzLqVTv
      Eyla3rUAHO8d5wdvtLLrzMhF0ccTkjylarxGKfDB5bl8dEMx60vPvfy5CsPlZJqxikE+tK6E
      aFyiLMeCJRHk1LCIrFVSqoN/3d017Tp/ROTlU4PvWUKuX+zrZF2pY5rOPx+/P9L3vurz7xaz
      2YJWp6O5sRevJ0h5VS5j7vGUACQSEq6hANX5qy/4Hjk5OeQNl2HNiXPmVA91G4ppbxri5LEO
      9AYdFWXJGmExMURoLMbS1clMHuFwGJPJlPIHumABcPmjfPelJp4+9t76ssQSMgc63VxfmzNF
      f9POEZk05PLR5QmQ7U9g0GkY9kcIh0NIqNGoFbimFTBNolMreOHE4HvyHJCMdLuQTBALqYZz
      OSHLMpIijD0ni/xyG73tYyhkJa5hHzq9Fr1YwtYVKxZdEul89Bo7MIIkSXQ0D2EwaokoYpgN
      GanNNrVSj0HnSPWbiViFCS6oBc8c6+fvnz01b1TXxWLIG+FLvz7K9iVO/v2eFWSYtDMWuJhg
      2JUMRPHOEpAyG/l2A/WdF0/3n4k9zTNnLZ6L8J+Ay/RkAoEAUiKRMoNmZJtobxzG6swi4BFZ
      t/7dbYRNkJddzP7jxwkFoqzcUEbAFyEaEcnPXpoSrlV1m+f8jEW5Q0fiCb7xhxP85VMN71vn
      n8yu5lE++MO9HOwcm9e780IotOvxhWd/ruWFNoyqd/fiQhdQqTLXNj0Q53LG5XJhPev+EQnF
      UaoUCEqIhOMUOVdelM4P4HA4yLaXsXJDGQqFgMcVwKIroLho+oJ7NhY8A/jCcT7zq8MzZjp4
      Pxn2Rbn/kXr+/3tXsqbYzpHuixcqubEsg51NM8cfr6jMAm+YHcvyWZGr53R/EKVKQKXTMjjo
      pjjDhGjQkXCP0zwe59gsen6ORcuwLzJjusTZ2Fo5vyfl5URcjKE8G2GnM6jp7/ZjtuqQA5lU
      rFsyz9WLw2JyMjjYhwItWbYKVtRsmv+iSSxIANzBGB/9+YEZq6FcCuIJma8+eYz1/6+9cw1u
      47ru+H8Xu1iQAAmS4lui+JREkdSLohRRL5t0HD3ixI7Tsd1xLMmp1DqJH/qQjFs70zTOZOJx
      p23SmWY6sTuq3anjpO40bhNLM3bktK6VWHFkWZIl2ZZEkZQlkiJBEM99YTcfwF0tFrsASIIk
      gN3fDIfg7gL3Qrrn3nPPOfecLFpEVtWUYFtbpen9oZth9FQXgZdknBuexHhEQgwAS8vorvEg
      HJUwOBEBEyNQTZkPboIgsKGhLCGqNRUehsL+3sxntFxgbHJQPcAOAPUN5WBHatC9flPW21rZ
      thrNQpthoFsmpBWAMCfi4SMnc2bwK8gycHLAB4ok5hxARgDY0rok5Woy6Q/jDb+xV/iU5nVF
      CYNgigLgNEnA46LhLaIzKv7x7L1rsMST/jBJLuHz30TV8vgebWIkAg9Vj472NRlFgc6G2Q5+
      II0ASLKMb7x8asZmu4VCBrISPbmrsxYvTvsVSAKmTrtM8AVTZ3wL8zG8c3kCz3yxE7++OJZQ
      YE+Lh6Hw7L1rcFeGWbJziQtnrqB17XpMjIXAiMvRvT71RnQxSSkAP37rEn4zC6vFQkMgnul5
      Nrn2v7JlOZ7c3Y5BX3x2r3A78c6l+bMEbWqqQIQXsWF5OR7qbcRvPrqJV/9wDedvBBDlY6gr
      c2HHiirs723Mu5kfAHy+CTDF8VSGsujA2s7Z2/oXAlMBODU4iX8wOrObJxSasAAADsNJREFU
      g8gAWqrc8BbRGevWBICn9q7GwR3xbGJHn9gJAHjt9KfzJgAtlW688vshBFkR/3j8Ezy/rwd9
      7dV55eRKh9/vR80yL6IRHmV0c1L0Za5hqJSJkoSnf3EWsQxP8+cCF0eC2NfbhB8/2I2NjeYm
      UtpBYE9XLV57dBsO7WxJMsnt6aozzP+TDf5sezPuWb8UDEWip7E842wJ+UQo6gfNOFDsZkCk
      MAbkAhzHGa8A//bbwYxy3+ca3/vleRz/5m3Yu6YOowEW7w9N4tpkFKwQQ4mLRnOlG92N5fAw
      5pqfkyLx5O52HP7Z6az2rbnSDV+Ex5sXRsGJEn5w9CKOnLiKA1ubcHBHM6h52iAuNA6HAzRN
      YXJExJY13ZBlGRzHgWGYrNn/s4XT6Uw+EBPhRGx/7q2M0xfmGn+5px2P3Naa8pmbQQ6/PHMd
      b10cw+WbYUR4EcVOCo1LirGpqQKfX1uHH775MV4/m1kl+3RQZDynkFk2jP72avxk38Z5F4L5
      PBCjMD4+jjNDr+Py+TE8/MBhUBSlBqDpiZ/ukufNOpQJSQJw5J2BrIcZLyRVJQzeebLfMNWh
      P8Lj79/4GK+cHE67Yd7cXIFPRoNzzkxNEkBnvVctlWpGJoI7VxZCAADg4uUP8P75t+FxLEXf
      zjuT4m8UckEAElqWZXnGNXBzjZtBDkfPJQe0nR72Y/eP3sZLvx3MyFp0csAHf1SY08EShiLx
      t3+yDuMp/AIKL564WjB7gvbWdbirbz92bus3HfxA3Cm4mIMf0AnAqSE/BjIsTpfL6CMu37vq
      w58+/7sZnVMA4s42SZbRtKQYbpND82a4nQ5sbCzHD9/82PSEm5YbUyxG0/gQ8okSTwm83uTS
      U7lGggC8fnb+QoEXkhOXJ+CPxPcwN6aiOPTSe3OKqByciOB793Th8GdXpMzx4yAJFNEk7utp
      ACdK2NVZi6c/3zHrdm3mnwQBMPNK5hsxSVaTXH3ntQ/nrMfLAJ479hEO7WjB/36rD0ef2IGe
      pnL18Prjd6zAS1/djHqvC1FBws/fG0bfqmrs623Crs4a1GZgVq3zulBTkn+Or3TIsoxYLJaz
      6p0qAL4wj0tjM4ufz2VODvjwwTV/1vJujgRY/Pu7gwjzIg7/7DTeuzoJTpQwFRVw5P8HcHLA
      h2FNobw3LoxiIsyBIAgc2NqU9vP3b808dWA+IcsyBEEAz/M5KQSqQfxcGitFvnH22lTW822+
      cnIYMQn4SBcYGORE/OuJgYRrTgcJ13Sh7oPbm3FywIfjF41Drfvbq3Fwe3LeynxHSZbrdrtn
      XS4p2/0xPRT/SQHN/gBwaSyEUbMs1BSDrfUUhv0kihkJZZVeOMJBjAQFyEwxKogo/nAjmvS2
      K+NhHDOwMAHxfP+7Omvxn6c+hdNB4q+/0KE63CgHiZ/s24gX3h7AiyeuqpviOq8L+7c24eD2
      ZrVuQKEQi8XAcRxomp7z0ce5IkkSIpEIJElCUVFRQvSo2rNP/cn/4flMkBOTEumqyPFaBVX1
      lagITSG6xIv17mJ8cJ2FWMwgOGLuBDQLYa73FuHv7luPv9q7Gi7akeRtpkgSj9zWir/Y2aJa
      e2pKcs87mi1EUYzX9E1hBp0vlJle8UKzLAtJipu+g8EgGIYBSZIgCE2RPJ9BYtiCJcbhwqQL
      4ZEhiGwM4mAA7zoJEJIEmaLhD5pPBrs6a/Hyu0NJwvW1vrgTqzJNBCdBEKgtza8jjjNFEOKZ
      4SRJAsuyCxoQJ8uymgIxFAqB5xPHNUEQYFlWfa0KQLYSsq5rr8PkNT/6O8txbSKKoqpKlET8
      +GSCA1VSilLOD6K0HB6Rg8vtwqVJFt3VLpy4GgRFEyglJBy/Mvtkt+lYVeOBDGBiKoIJ1Tok
      oKyyGFcmWQCpbfYNFcX4+SO9ePboRXx4fQp13iJ8va8Ve7rq5q3P+YRi8YlEIhBFEbIsw+Vy
      zWmlkyQpwWssiqIqYED8QIwkSZAkCaIoIhKJQBAExGIxdSVQfgNQXzudzlsCkKpG7kzwBXl8
      pq0CXq8T/JQInnJg3fIKlBZFEWUY3Bj2Y+hmCHe2enE9KGHPhmXAxAR2ttfAF4qixU3OqwCs
      b6oEGwrD3b4MXU4OF8IUVlYRGB1ncb2JQEu9B65gBJenWPz0VLK+X+lxYnVdKV786uZ562Ou
      kyqXpyAI6sB3OBzqwJ2NAIiiCI7jIAjCdKUYGtFoNGHwAwBJkmobkiSBIIiEqvNK20Z9UAUg
      kzKhmTD86QSGtamCLo7hVYPnLkyXvXz1/aGstGuEiyYTqrgAwOmr4xBkoCw8jmsyj5Vty3B2
      cByhaAzXOQIjUyFEAyz8JgtiR13uezfnE2VzG4/6pNWBrkDTNGKxGCiKQiwWU2fm2YQ8iKKo
      qiuSJEEQ4iu2IlQKygpBEIQ6yBVBUPps1H6CCuQ1KOKW7/S2VCZVmf9IzRUU//1/g5kH/rVU
      utGQpXrFuQzP80nnbG/l4BfUAa2oOS6XCxRFged5kCSpmjx5nk+ardOhDOx4dZmIabCcdrAD
      t1YBo7+NZn6CICAIwi0BqCmwjRlJAI/2tyUJwFx4YHNDUibrQkTR4ZVgNUmSwDAMHA4HHA4H
      IpEIOO5W3JK28IZW11b+nsmhdWXm5jguQXdXBrz2s/W6vVbV0vdB//2A6ZVBudi4pLBmtmXl
      xdjYWI7PddRk5fNqS1148DP5lZ5ktkSjUcRiMbAsi2AwqOrhHMeB5/kElUc/E2sHK0EQ8UMn
      M5g1HA4HBEFQLUlKG9rZXPujXNP+1mLkfdauSuoKsNqgbGg+0z79fb57dyd+f9U3p3ggAsCz
      X16jVpQsdBS9HYC6AhiVV9LPyAqKEDidzoxNoHqbvdHg1q8I+vbM+mG0KikqkroCrKwtmXHI
      by7TPX0uuM5bhOf39aCInv13+/ZdHbh9VeEcXJ8J+tlWuQYgQbdXnlE8rR6PB263O6PNryzL
      CAQCCIfD6sbZrC96gUsXX6QXJK1ViiTJWwLgIAhsaTGupJePbGu9leWtp6kCP/3zLTN2QDEU
      iee+vFatU2xF9DOndhDqB7csx6vCFxUVZaz6SJKEqakp1bavb1dr8dEKhpGOrzyrPKe/rr2m
      XE/4Bp/Nkr682NR5XehcmlhlZn1DGY4d3ol9vY1wZhB3c/uqKvzq8R24b9PsKpgUAkazrX4T
      qqCoPE6nU1UvjGbySCQCn8+n2uk5jktwWJmpM4paZKb/Gwmq2XXTEkm7u2rxndc+nFWCqVzi
      C+vqDY8ylhXTeObuLjzWvwK/OnMdx1Mcil9ZU1h7otmgHZQAVJOkkdpB0zRIklS9vuFwOEn/
      lyQJPM8n7DHMLDfav430+FT39UJktj+QZTlRAMqLndjdVYv//uB6un+bnIUAcH+aWbuqhMGB
      bc04sM26qk0qFDu/fsCZqTSKzZ+iKDUFiqIe6cMPtLM9ELf6lJSUIBQKGVp9FGai+xupZtr+
      a8MqknSBgzvye1D0tVejtWrhIxALDbONqHaW1V9XwiCUzbASERoOh9X9gfKsWuln2r9A0zRc
      LlfC4E0VQmFk+tSuBGYqkf65JAFYu6wsr1P1PXHHisXuQt5jpGObPaO/rwSkxWLxWJJwOKw+
      w/M8GIZBaWmpGkYhCALC4TB4nledX0YbVqO20glHJs8Y7gaf3rsatCP/XJ73bliKdQ1li92N
      gsNMRzdCFEUEAgEEg0FVvVH2AqWlpfB4PHA6neppsXA4rMb4aDGyApltwFM9Z3ZftWQZfYm2
      ag8O7WhJ+2VziVIXhaf2rl7sbhQE2tldv9HUYmZhUd4XCAQQjUbVwyda9YRlWfA8r0aO6gdv
      qo2v0UDW3jdbvYz2NKb2wMfvWKF6U/OBZ+7uQmUBZlVYLBQzppm3FzAeYNrYfZqmwTCMei0U
      CiEQCIBlWdUMaqRKGVlzzHwARv1R2tf+aO+n3AMouGgH/unBbhTngXf4gU0NuGfD0sXuRsGg
      DyHQC0EmKglBxKMtlaC6aDQKjuMgiiJ4nk8KbTZybJnp8mb+AK2vQLuZTrWfSekRaq3y4EcP
      bICDzN39wObmCvzNFzsXuxsFRyo1I1V4stb8qawIkiSB4zh1ACqzv5G50syJpW3HqH9aQTUy
      e5qtZGldond21OAHX1qT7rFFob22BC/s61HTj9jMH6ligvToVxDtoXTlfdpBq/071UZbr8Lo
      20v1HjNhyii88b5NDZABPPVfZxHLQk2ubLBumRdHHt6M0gI8yLPYKOqE8trILAkkO7mU11q9
      nSRJsCyb5OQyG8B6/d9M/TIKhTD6bKN+a8n4nNr9mxrwz1/ZmBN7gr5VVXj50BZUuJ2L3ZWC
      JJUTSX/f7Lr2GKR+hjcakHq93swKpDyrtJept9rMYjSjg5p3dtTgfx7bvmjWIQdB4JufW4V/
      ObDJMrH5i4UyAI08wmYCoD2crg2lMBvERpYfs3bMLDvKPTMhNdsTpPQDpKK1yoNffGMbvn57
      64I6y1bXleA/HunFo/1tc8rZb5OedIM+lcVGv0cwU5+0z5iZL7XXtauJkQVI3y+j7yHLsuqh
      VtuQp981m4ohl8ZC+P7rF/CWSc7LbFDhduKx/jY81NtYMHW0FotMK8QEg6nrw5nNuEaD3Mwi
      Y/aZM/nsTNs3WmnUtuYiAApnrvnxwtsDOHZuJGuh1C2VbjzU24j7expQbKs7WWGhSiTlE1kR
      AIXJCI9j50bw5vlR/O7KxIyzzbVVe3DbyirsXVOH7uVlaaXeZmbYApBMVgVAiyjJ+HgkgAsj
      QQxORDAaYDEVFcCLEkgCcDspVHicWFZWhLZqD7qWevOyMno+YQtAMvOmW1AkgY56LzrqrZ1J
      zSa3sXeVNpbGFgAbS2MLgI2lsQXAxtLYAmBjaWwBsLE0tgDYWBpbAGwsjS0ANpbGFgAbS2ML
      gI2lsQXAxtLYAmBjaWwBsLE0tgDYWBpbAGwsjS0ANpbGFgAbS2MLgI2lsQXAxtLYAmBjaWwB
      sLE0tgDYWBpbAGwsjS0ANpbGFgAbS2MLgI2lsQXAxtLYAmBjaWwBsLE0tgDYWJo/AoDtn/xb
      lgCNAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
